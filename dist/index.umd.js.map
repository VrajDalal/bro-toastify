{"version":3,"file":"index.umd.js","sources":["../src/core/container.ts","../src/dom/style.ts","../src/core/bro-toastify.tsx","../src/adapters/react/index.tsx","../src/adapters/angular/index.ts","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts","../src/index.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement | null {\r\n    if (typeof window === 'undefined') {\r\n        return null; // Return null during SSR\r\n    }\r\n\r\n    if (containers.has(position!)) {\r\n        const existingContainer = containers.get(position!)!;\r\n        existingContainer.className = `broToastify-container broToastify-${position}`;\r\n        return existingContainer;\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `broToastify-container broToastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions['position']): HTMLElement {\r\n    if (containers.has(position!)) {\r\n        console.debug('Retrieving container for position:', position);\r\n        return containers.get(position!)!;\r\n    }\r\n\r\n    throw new Error(`Container with position \"${position}\" does not exist.`);\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    console.debug('Removing all containers');\r\n    containers.forEach((container) => {\r\n        container.remove();\r\n    });\r\n    containers.clear();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { getAnimationKeyframes } from '../core/animation';\r\n\r\nexport function getBroToastifyStyles(): string {\r\n  return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      display: flex;\r\n      flex-direction: column;\r\n      opacity: 1 !important;\r\n      visibility: visible !important;\r\n    }\r\n\r\n    .broToastify-default {\r\n      background-color: rgb(240, 241, 240);\r\n      color: #333;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n\r\n    .broToastify-loader-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }   \r\n\r\n    .broToastify-loader {\r\n      border: 4px solid #f3f3f3;\r\n      border-top: 4px solid #3498db;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 20px;\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    .broToastify-loader-message {\r\n      font-size: 0.875rem;\r\n      color: #333;\r\n      animation: fadeIn 0.3s ease-in-out;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    @keyframes fadeIn {\r\n      0% { opacity: 0; transform: translateY(-10px); }\r\n      100% { opacity: 1; transform: translateY(0); }\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n      font-size: 1rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n    }\r\n    \r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    ${getAnimationKeyframes('fade')}\r\n    ${getAnimationKeyframes('slide', 'top')}\r\n    ${getAnimationKeyframes('zoom')}\r\n    \r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function injectStyles() {\r\n  if (typeof window === 'undefined') return;\r\n\r\n  const styleId = 'bro-toastify-styles';\r\n  if (document.getElementById(styleId)) return;\r\n\r\n  const style = document.createElement('style');\r\n  style.id = styleId;\r\n  style.innerHTML = `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      pointer-events: none;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 10px;\r\n    }\r\n    .broToastify-top-right {\r\n      top: 20px;\r\n      right: 20px;\r\n    }\r\n    .broToastify-notification {\r\n      background: #fff;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n      padding: 16px;\r\n      pointer-events: auto;\r\n      display: flex;\r\n      flex-direction::id\r\n      gap: 8px;\r\n      min-width: 250px;\r\n      max-width: 400px;\r\n      opacity: 1;\r\n      transition: opacity 0.3s, transform 0.3s;\r\n    }\r\n    .broToastify-success {\r\n      background: #e6ffed;\r\n      border: 1px solid #00cc44;\r\n    }\r\n    .broToastify-error {\r\n      background: #ffe6e6;\r\n      border: 1px solid #ff3333;\r\n    }\r\n    .broToastify-close {\r\n      background: none;\r\n      border: none;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      align-self: flex-end;\r\n    }\r\n    .broToastify-title {\r\n      font-weight: bold;\r\n    }\r\n    .broToastify-message {\r\n      font-size: 14px;\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n}","import { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer, getContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\nif (typeof window !== 'undefined') {\r\n    injectStyles();\r\n}\r\n\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: 'default',\r\n    duration: 3000,\r\n    position: 'top-right',\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify | undefined {\r\n    if (typeof window === 'undefined') {\r\n        return undefined; // Prevent toast creation during SSR\r\n    }\r\n\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            dismissBroToastify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroToastify(id: string): void {\r\n    const BroToastify = Array.from(broToastifys.values()).find((t) => t.id === id);\r\n\r\n    if (BroToastify) {\r\n        broToastifys.delete(id); // Remove the toast from the Map\r\n        emit('dismiss', BroToastify);\r\n\r\n        if (BroToastify.onClose) {\r\n            BroToastify.onClose();\r\n        }\r\n\r\n        // Remove the toast element from the DOM\r\n        if (typeof window !== 'undefined') {\r\n            const toastElement = document.getElementById(`broToastify-${id}`);\r\n            if (toastElement) {\r\n                toastElement.remove();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    if (typeof window === 'undefined') {\r\n        return; // Prevent execution during SSR\r\n    }\r\n\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((broToastify) => {\r\n        dismissBroToastify(broToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): { off: () => void } {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return {\r\n        off: () => {\r\n            const callbacks = listeners.get(event);\r\n            if (callbacks) {\r\n                const index = callbacks.indexOf(callback);\r\n                if (index !== -1) {\r\n                    callbacks.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nconst toast = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'loading', ...options }),\r\n    promises: (\r\n        promise: Promise<any>,\r\n        message: { loading: string, success: string, error: string },\r\n        options?: Partial<BroToastifyToastifyOptions>\r\n    ) => {\r\n        if (typeof window === 'undefined') {\r\n            return undefined; // Prevent execution during SSR\r\n        }\r\n\r\n        const id = generateId();\r\n\r\n        createBroToastify({ id, message: message.loading, type: 'loading', ...options });\r\n\r\n        promise\r\n            .then((result) => {\r\n                createBroToastify({ id, message: message.success, type: 'success', ...options });\r\n                dismissBroToastify(id)\r\n                return result\r\n            })\r\n            .catch((error) => {\r\n                createBroToastify({ id, message: message.error, type: 'error', ...options });\r\n                dismissBroToastify(id)\r\n                throw error\r\n            });\r\n        return { id };\r\n    },\r\n    isToastActive: (id: string): boolean => {\r\n        return !!Array.from(broToastifys.values()).find((toast) => toast.id === id);\r\n    },\r\n    dismiss: (id: string) => dismissBroToastify(id),\r\n    dismissible: (id: string) => dismissBroToastify(id),\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\nexport default toast;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport coreToast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\n\r\n// Global singleton to manage toast rendering\r\nconst toastManager = (() => {\r\n  let container: HTMLDivElement | null = null;\r\n  let activeToasts: Map<string, HTMLElement> = new Map();\r\n  let createListener: { off: () => void } | null = null;\r\n  let dismissListener: { off: () => void } | null = null;\r\n  let initialized = false;\r\n\r\n  const init = (position: string, newestOnTop: boolean, dismissible: boolean) => {\r\n    if (typeof window === 'undefined' || initialized) {\r\n      console.log('ToastManager init skipped:', { isServer: typeof window === 'undefined', initialized });\r\n      return;\r\n    }\r\n\r\n    console.log('ToastManager initializing, position:', position); // Debug log\r\n    initialized = true;\r\n\r\n    // Create or update container\r\n    container = document.querySelector(`.broToastify-container.broToastify-${position}`);\r\n    if (!container) {\r\n      container = document.createElement('div');\r\n      container.className = `broToastify-container broToastify-${position}`;\r\n      container.style.display = 'flex';\r\n      document.body.appendChild(container);\r\n      console.log('Created container:', container); // Debug log\r\n    } else {\r\n      container.style.display = 'flex';\r\n      console.log('Found existing container:', container); // Debug log\r\n    }\r\n\r\n    // Verify container is in DOM\r\n    if (!document.body.contains(container)) {\r\n      document.body.appendChild(container);\r\n      console.log('Re-appended container to body:', container); // Debug log\r\n    }\r\n\r\n    // Clean up old containers\r\n    document.querySelectorAll('.broToastify-container').forEach((oldContainer) => {\r\n      if (oldContainer !== container) {\r\n        oldContainer.remove();\r\n        console.log('Removed old container:', oldContainer); // Debug log\r\n      }\r\n    });\r\n\r\n    // Handle create event\r\n    const createHandler = (toast: BroToastify) => {\r\n      if (!container || !toast) {\r\n        console.error('Cannot create toast: missing container or toast', { container, toast });\r\n        return;\r\n      }\r\n\r\n      console.log('Received create event for toast:', toast); // Debug log\r\n\r\n      let toastElement = activeToasts.get(toast.id);\r\n\r\n      if (!toastElement) {\r\n        toastElement = document.createElement('div');\r\n        toastElement.id = `broToastify-${toast.id}`;\r\n        toastElement.className = `broToastify-notification broToastify-${toast.type}`;\r\n        toastElement.setAttribute('data-id', toast.id);\r\n\r\n        try {\r\n          if (newestOnTop) {\r\n            container.prepend(toastElement);\r\n          } else {\r\n            container.appendChild(toastElement);\r\n          }\r\n          console.log('Created and appended toast element:', toastElement); // Debug log\r\n        } catch (error) {\r\n          console.error('Failed to append toast element:', error);\r\n          return;\r\n        }\r\n\r\n        activeToasts.set(toast.id, toastElement);\r\n      } else {\r\n        console.log('Toast element already exists:', toastElement); // Debug log\r\n      }\r\n\r\n      try {\r\n        toastElement.innerHTML = `\r\n          <div class=\"broToastify-title\">${toast.title || ''}</div>\r\n          <div class=\"broToastify-message\">${toast.message}</div>\r\n          ${dismissible ? `<button class=\"broToastify-close\" aria-label=\"Close\">×</button>` : ''}\r\n        `;\r\n        console.log('Updated toast element HTML:', toastElement); // Debug log\r\n      } catch (error) {\r\n        console.error('Failed to update toast HTML:', error);\r\n      }\r\n\r\n      if (dismissible) {\r\n        const closeButton = toastElement.querySelector('.broToastify-close');\r\n        if (closeButton) {\r\n          closeButton.addEventListener('click', () => {\r\n            if (container && toastElement) {\r\n              container.removeChild(toastElement);\r\n              activeToasts.delete(toast.id);\r\n              coreToast.dismiss(toast.id);\r\n              console.log('Dismissed toast:', toast.id); // Debug log\r\n            }\r\n          });\r\n          console.log('Added close button listener for toast:', toast.id); // Debug log\r\n        } else {\r\n          console.warn('Close button not found for toast:', toast.id);\r\n        }\r\n      }\r\n\r\n      // Auto-dismiss\r\n      if (toast.duration && toast.duration > 0) {\r\n        setTimeout(() => {\r\n          if (container && toastElement && container.contains(toastElement)) {\r\n            container.removeChild(toastElement);\r\n            activeToasts.delete(toast.id);\r\n            console.log('Auto-dismissed toast:', toast.id); // Debug log\r\n          }\r\n        }, toast.duration);\r\n      }\r\n    };\r\n\r\n    // Handle dismiss event\r\n    const dismissHandler = (toast: BroToastify) => {\r\n      const id = toast.id;\r\n      const toastElement = activeToasts.get(id);\r\n      if (toastElement && container && container.contains(toastElement)) {\r\n        container.removeChild(toastElement);\r\n        activeToasts.delete(id);\r\n        console.log('Handled dismiss event for toast:', id);\r\n      } else {\r\n        console.warn('Dismiss event for non-existent toast:', id);\r\n      }\r\n    };\r\n\r\n    // Register listeners\r\n    try {\r\n      createListener = on('create', createHandler);\r\n      dismissListener = on('dismiss', dismissHandler);\r\n      console.log('Registered create and dismiss listeners'); // Debug log\r\n    } catch (error) {\r\n      console.error('Failed to register listeners:', error);\r\n    }\r\n  };\r\n\r\n  const cleanup = () => {\r\n    if (typeof window === 'undefined') return;\r\n    console.log('ToastManager cleaning up'); // Debug log\r\n    createListener?.off();\r\n    dismissListener?.off();\r\n    if (container) {\r\n      container.remove();\r\n      activeToasts.clear();\r\n      container = null;\r\n    }\r\n    initialized = false;\r\n  };\r\n\r\n  return { init, cleanup };\r\n})();\r\n\r\n// Client-side initialization script\r\nif (typeof window !== 'undefined') {\r\n  // Delay initialization to ensure DOM and Toaster render are complete\r\n  setTimeout(() => {\r\n    console.log('Running client-side Toaster initialization'); // Debug log\r\n    const toasterConfig = (window as any).__BRO_TOASTER_CONFIG || {\r\n      position: 'top-right',\r\n      newestOnTop: true,\r\n      dismissible: true,\r\n    };\r\n    console.log('Toaster config:', toasterConfig); // Debug log\r\n    toastManager.cleanup();\r\n    toastManager.init(toasterConfig.position, toasterConfig.newestOnTop, toasterConfig.dismissible);\r\n  }, 0);\r\n}\r\n\r\n// Server-safe Toaster component\r\nexport const Toaster: React.FC<{\r\n  position?: BroToastifyToastifyOptions['position'];\r\n  newestOnTop?: boolean;\r\n  dismissible?: boolean;\r\n}> = ({ position = 'top-right', newestOnTop = true, dismissible = true }) => {\r\n  // Store config for client-side initialization\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    try {\r\n      console.log('Toaster component storing config:', { position, newestOnTop, dismissible });\r\n      (window as any).__BRO_TOASTER_CONFIG = { position, newestOnTop, dismissible };\r\n      toastManager.cleanup();\r\n      toastManager.init(position, newestOnTop, dismissible);\r\n    } catch (error) {\r\n      console.error('Failed to initialize Toaster:', error);\r\n    }\r\n\r\n    return () => {\r\n      toastManager.cleanup();\r\n    };\r\n  }, [position, newestOnTop, dismissible]);\r\n\r\n  // Render a hidden placeholder to avoid hydration issues\r\n  return <div className={`broToastify-container broToastify-${position}`} style={{ display: 'none' }} />;\r\n};\r\n\r\n// Hook for using toast\r\nexport const broToastify = () => {\r\n  return {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.show(message, options),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.success(message, options),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.error(message, options),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.info(message, options),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.warning(message, options),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      coreToast.loading(message, options),\r\n    promises: (\r\n      promise: Promise<any>,\r\n      messages: { loading: string; success: string; error: string },\r\n      options?: Partial<BroToastifyToastifyOptions>\r\n    ) => coreToast.promises(promise, messages, options),\r\n    isToastActive: (id: string) => coreToast.isToastActive(id),\r\n    dismiss: (id: string) => coreToast.dismiss(id),\r\n    dismissible: (id: string) => coreToast.dismiss(id),\r\n    clearAll: () => coreToast.clearAll(),\r\n  };\r\n};\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;","\r\nimport toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Toast service for Angular\r\nexport class ToastService {\r\n  constructor() {\r\n    // Inject styles when service is instantiated\r\n    if (typeof window !== 'undefined') {\r\n      injectStyles();\r\n    }\r\n  }\r\n\r\n  show(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.show(message, options);\r\n  }\r\n\r\n  success(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.success(message, options);\r\n  }\r\n\r\n  error(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.error(message, options);\r\n  }\r\n\r\n  info(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.info(message, options);\r\n  }\r\n\r\n  warning(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.warning(message, options);\r\n  }\r\n\r\n  dismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n\r\n  clearAll() {\r\n    toast.clearAll();\r\n  }\r\n}\r\n\r\n// Component class for ToastContainer\r\nexport class ToastContainerComponent {\r\n  position: BroToastifyToastifyOptions['position'] = 'top-right';\r\n  newestOnTop: boolean = true;\r\n  toasts: BroToastify[] = [];\r\n\r\n  private createUnsubscribe: (() => void) | null = null;\r\n  private dismissUnsubscribe: (() => void) | null = null;\r\n\r\n  ngOnInit() {\r\n    // Subscribe to toast events\r\n    const createSubscription = on('create', (toast: BroToastify) => {\r\n      if (toast.position === this.position) {\r\n        if (this.newestOnTop) {\r\n          this.toasts = [toast, ...this.toasts];\r\n        } else {\r\n          this.toasts = [...this.toasts, toast];\r\n        }\r\n      }\r\n    });\r\n    this.createUnsubscribe = createSubscription.off;\r\n\r\n    const dismissSubscription = on('dismiss', (toast: BroToastify) => {\r\n      this.toasts = this.toasts.filter(t => t.id !== toast.id);\r\n    });\r\n    this.dismissUnsubscribe = dismissSubscription.off;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup\r\n    if (this.createUnsubscribe) {\r\n      this.createUnsubscribe();\r\n    }\r\n\r\n    if (this.dismissUnsubscribe) {\r\n      this.dismissUnsubscribe();\r\n    }\r\n  }\r\n\r\n  handleDismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const angularToast = toast;\r\n","import toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): () => void {\r\n    // Inject styles\r\n    if (typeof window !== 'undefined') {\r\n        injectStyles();\r\n    }\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(toast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    const createListener = on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container.prepend(toastElement);\r\n        } else {\r\n            container.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        const handleDismiss = (e: CustomEvent) => {\r\n            if (e.detail.id === toast.id) {\r\n                toast.dismiss?.(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        };\r\n        document.addEventListener('toast:dismiss', handleDismiss as EventListener);\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                toast.dismiss?.(toast.id); // Use dismiss method\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            document.removeEventListener('toast:dismiss', handleDismiss as EventListener);\r\n        };\r\n        toastElement.addEventListener('remove', cleanup, { once: true });\r\n    });\r\n\r\n    // Cleanup on module unload (optional, if needed)\r\n    return () => {\r\n        createListener.off();\r\n    };\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const vanilla = toast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `broToastify-${id}`;\r\n    broToastifyElement.className = `broToastify-notification broToastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'broToastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'broToastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'broToastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('broToastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.broToastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}","    export * from './core/bro-toastify';\r\n    export * from './core/types';\r\n\r\n    // Export framework adapters\r\n    import * as ReactAdapter from './adapters/react';\r\n    import * as AngularAdapter from './adapters/angular';\r\n    import * as VanillaAdapter from './adapters/vanilla';\r\n    // import * as VueAdapter from './adapters/vue';\r\n    // import * as SvelteAdapter from './adapters/svelte';\r\n\r\n    // Named exports for each framework\r\n    export const React = ReactAdapter;\r\n    export const Angular = AngularAdapter;\r\n    export const Vanilla = VanillaAdapter;\r\n    // export const Vue = VueAdapter;\r\n    // export const Svelte = SvelteAdapter;\r\n\r\n\r\n\r\n    // Also create a default export for convenience\r\n    export { Toaster } from './adapters/react'; // Adjust the path if necessary\r\n    import toast from './core/bro-toastify';\r\n    export default toast;"],"names":["containers","Map","injectStyles","window","styleId","document","getElementById","style","createElement","id","innerHTML","head","appendChild","defaultOptions","type","duration","position","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","generateId","Date","now","toString","Math","random","substring","createBroToastify","options","mergedOptions","BroToastify","createdAt","set","has","existingContainer","get","className","console","debug","container","setAttribute","top","right","left","transform","bottom","error","body","createContainer","emit","setTimeout","dismissBroToastify","Array","from","values","find","t","delete","onClose","toastElement","remove","clearBroToastify","forEach","broToastify","on","event","callback","push","off","callbacks","index","indexOf","splice","data","toast","show","message","success","info","warning","loading","promises","promise","then","result","catch","isToastActive","dismiss","clearAll","toastManager","activeToasts","createListener","dismissListener","initialized","init","newestOnTop","log","isServer","querySelector","display","contains","querySelectorAll","oldContainer","createHandler","prepend","title","closeButton","addEventListener","removeChild","coreToast","warn","dismissHandler","cleanup","clear","toasterConfig","__BRO_TOASTER_CONFIG","Toaster","useEffect","React","messages","angularToast","constructor","this","toasts","createUnsubscribe","dismissUnsubscribe","ngOnInit","createSubscription","dismissSubscription","filter","ngOnDestroy","handleDismiss","vanilla","Object","assign","Error","getContainer","broToastifyElement","broToastifyTitleElement","textContent","broToastifyMessageElement","onclick","CustomEvent","detail","dispatchEvent","onClick","e","target","closest","cursor","createBroToastifyElement","_a","call","removeEventListener","once","ReactAdapter","Angular","AngularAdapter","Vanilla","VanillaAdapter"],"mappings":"yWAEA,MAAMA,EAAuC,IAAIC,aCyLjCC,IACd,GAAsB,oBAAXC,OAAwB,OAEnC,MAAMC,EAAU,sBAChB,GAAIC,SAASC,eAAeF,GAAU,OAEtC,MAAMG,EAAQF,SAASG,cAAc,SACrCD,EAAME,GAAKL,EACXG,EAAMG,UAAY,olCAiDlBL,SAASM,KAAKC,YAAYL,EAC5B,CCjPsB,oBAAXJ,QACPD,IAIJ,MAAMW,EAAsD,CACxDC,KAAM,UACNC,SAAU,IACVC,SAAU,YACVC,aAAa,EACbC,cAAc,EACdC,gBAAYC,EACZC,iBAAaD,GAIXE,EAAyC,IAAIrB,IAG7CsB,EAAqC,IAAItB,IAGzCuB,EAAa,IACRC,KAAKC,MAAMC,SAAS,IAAMC,KAAKC,SAASF,SAAS,IAAIG,UAAU,EAAG,GAIvE,SAAUC,EAAkBC,GAC9B,GAAsB,oBAAX7B,OACP,OAGJ,MAAM8B,EAAgB,IAAKpB,KAAmBmB,GACxCvB,EAAKe,IAELU,EAA2B,IAC1BD,EACHxB,KACA0B,UAAWV,KAAKC,OAkBpB,OAfAJ,EAAac,IAAI3B,EAAIyB,GFzCnB,SAA0BlB,GAC5B,GAAsB,oBAAXb,OACP,OAAO,KAGX,GAAIH,EAAWqC,IAAIrB,GAAY,CAC3B,MAAMsB,EAAoBtC,EAAWuC,IAAIvB,GAEzC,OADAsB,EAAkBE,UAAY,qCAAqCxB,IAC5DsB,CACV,CACDG,QAAQC,MAAM,mCAAoC1B,GAGlD,MAAM2B,EAAYtC,SAASG,cAAc,OAMzC,OALAmC,EAAUH,UAAY,qCAAqCxB,IAC3D2B,EAAUC,aAAa,OAAQ,UAC/BD,EAAUC,aAAa,YAAa,UACpCD,EAAUC,aAAa,cAAe,QAE9B5B,GACJ,IAAK,YACD2B,EAAUpC,MAAMsC,IAAM,OACtBF,EAAUpC,MAAMuC,MAAQ,OACxB,MACJ,IAAK,WACDH,EAAUpC,MAAMsC,IAAM,OACtBF,EAAUpC,MAAMwC,KAAO,OACvB,MACJ,IAAK,aACDJ,EAAUpC,MAAMsC,IAAM,OACtBF,EAAUpC,MAAMwC,KAAO,MACvBJ,EAAUpC,MAAMyC,UAAY,mBAC5B,MACJ,IAAK,eACDL,EAAUpC,MAAM0C,OAAS,OACzBN,EAAUpC,MAAMuC,MAAQ,OACxB,MACJ,IAAK,cACDH,EAAUpC,MAAM0C,OAAS,OACzBN,EAAUpC,MAAMwC,KAAO,OACvB,MACJ,IAAK,gBACDJ,EAAUpC,MAAM0C,OAAS,OACzBN,EAAUpC,MAAMwC,KAAO,MACvBJ,EAAUpC,MAAMyC,UAAY,mBAC5B,MACJ,QACIP,QAAQS,MAAM,qBAAqBlC,KAI3CX,SAAS8C,KAAKvC,YAAY+B,GAE1B3C,EAAWoC,IAAIpB,EAAW2B,EAG9B,CEZIS,CAAgBnB,EAAcjB,UAG9BqC,EAAK,SAAUnB,GAGXD,EAAclB,UAAYkB,EAAclB,SAAW,GACnDuC,YAAW,KACPC,EAAmB9C,EAAG,GACvBwB,EAAclB,UAGdmB,CACX,CAGM,SAAUqB,EAAmB9C,GAC/B,MAAMyB,EAAcsB,MAAMC,KAAKnC,EAAaoC,UAAUC,MAAMC,GAAMA,EAAEnD,KAAOA,IAE3E,GAAIyB,IACAZ,EAAauC,OAAOpD,GACpB4C,EAAK,UAAWnB,GAEZA,EAAY4B,SACZ5B,EAAY4B,UAIM,oBAAX3D,QAAwB,CAC/B,MAAM4D,EAAe1D,SAASC,eAAe,eAAeG,KACxDsD,GACAA,EAAaC,QAEpB,CAET,UAGgBC,IACZ,GAAsB,oBAAX9D,OACP,OAGoBqD,MAAMC,KAAKnC,EAAaoC,UAChCQ,SAASC,IACrBZ,EAAmBY,EAAY1D,GAAG,GAE1C,CAIgB,SAAA2D,EAAGC,EAAeC,GAQ9B,OAPK/C,EAAUc,IAAIgC,IACf9C,EAAUa,IAAIiC,EAAO,IAGzB9C,EAAUgB,IAAI8B,GAAQE,KAAKD,GAGpB,CACHE,IAAK,KACD,MAAMC,EAAYlD,EAAUgB,IAAI8B,GAChC,GAAII,EAAW,CACX,MAAMC,EAAQD,EAAUE,QAAQL,IACjB,IAAXI,GACAD,EAAUG,OAAOF,EAAO,EAE/B,GAGb,CAGA,SAASrB,EAAKgB,EAAeQ,GACzB,MAAMJ,EAAYlD,EAAUgB,IAAI8B,GAC5BI,GACAA,EAAUP,SAASI,GAAaA,EAASO,IAEjD,CAGA,MAAMC,EAAQ,CACVC,KAAM,CAACC,EAAiBhD,IACpBD,EAAkB,CAAEiD,UAASlE,KAAM,UAAWkB,IAClDiD,QAAS,CAACD,EAAiBhD,IACvBD,EAAkB,CAAEiD,UAASlE,KAAM,aAAckB,IACrDkB,MAAO,CAAC8B,EAAiBhD,IACrBD,EAAkB,CAAEiD,UAASlE,KAAM,WAAYkB,IACnDkD,KAAM,CAACF,EAAiBhD,IACpBD,EAAkB,CAAEiD,UAASlE,KAAM,UAAWkB,IAClDmD,QAAS,CAACH,EAAiBhD,IACvBD,EAAkB,CAAEiD,UAASlE,KAAM,aAAckB,IACrDoD,QAAS,CAACJ,EAAiBhD,IACvBD,EAAkB,CAAEiD,UAASlE,KAAM,aAAckB,IACrDqD,SAAU,CACNC,EACAN,EACAhD,KAEA,GAAsB,oBAAX7B,OACP,OAGJ,MAAMM,EAAKe,IAeX,OAbAO,EAAkB,CAAEtB,KAAIuE,QAASA,EAAQI,QAAStE,KAAM,aAAckB,IAEtEsD,EACKC,MAAMC,IACHzD,EAAkB,CAAEtB,KAAIuE,QAASA,EAAQC,QAASnE,KAAM,aAAckB,IACtEuB,EAAmB9C,GACZ+E,KAEVC,OAAOvC,IAGJ,MAFAnB,EAAkB,CAAEtB,KAAIuE,QAASA,EAAQ9B,MAAOpC,KAAM,WAAYkB,IAClEuB,EAAmB9C,GACbyC,CAAK,IAEZ,CAAEzC,KAAI,EAEjBiF,cAAgBjF,KACH+C,MAAMC,KAAKnC,EAAaoC,UAAUC,MAAMmB,GAAUA,EAAMrE,KAAOA,IAE5EkF,QAAUlF,GAAe8C,EAAmB9C,GAC5CQ,YAAcR,GAAe8C,EAAmB9C,GAChDmF,SAAU3B,GCxKR4B,EAAe,MACnB,IAAIlD,EAAmC,KACnCmD,EAAyC,IAAI7F,IAC7C8F,EAA6C,KAC7CC,EAA8C,KAC9CC,GAAc,EAoJlB,MAAO,CAAEC,KAlJI,CAAClF,EAAkBmF,EAAsBlF,KACpD,GAAsB,oBAAXd,QAA0B8F,EAEnC,YADAxD,QAAQ2D,IAAI,6BAA8B,CAAEC,SAA4B,oBAAXlG,OAAwB8F,gBAIvFxD,QAAQ2D,IAAI,uCAAwCpF,GACpDiF,GAAc,EAGdtD,EAAYtC,SAASiG,cAAc,sCAAsCtF,KACpE2B,GAOHA,EAAUpC,MAAMgG,QAAU,OAC1B9D,QAAQ2D,IAAI,4BAA6BzD,KAPzCA,EAAYtC,SAASG,cAAc,OACnCmC,EAAUH,UAAY,qCAAqCxB,IAC3D2B,EAAUpC,MAAMgG,QAAU,OAC1BlG,SAAS8C,KAAKvC,YAAY+B,GAC1BF,QAAQ2D,IAAI,qBAAsBzD,IAO/BtC,SAAS8C,KAAKqD,SAAS7D,KAC1BtC,SAAS8C,KAAKvC,YAAY+B,GAC1BF,QAAQ2D,IAAI,iCAAkCzD,IAIhDtC,SAASoG,iBAAiB,0BAA0BvC,SAASwC,IACvDA,IAAiB/D,IACnB+D,EAAa1C,SACbvB,QAAQ2D,IAAI,yBAA0BM,GACvC,IAIH,MAAMC,EAAiB7B,IACrB,IAAKnC,IAAcmC,EAEjB,YADArC,QAAQS,MAAM,kDAAmD,CAAEP,YAAWmC,UAIhFrC,QAAQ2D,IAAI,mCAAoCtB,GAEhD,IAAIf,EAAe+B,EAAavD,IAAIuC,EAAMrE,IAE1C,GAAKsD,EAoBHtB,QAAQ2D,IAAI,gCAAiCrC,OApB5B,CACjBA,EAAe1D,SAASG,cAAc,OACtCuD,EAAatD,GAAK,eAAeqE,EAAMrE,KACvCsD,EAAavB,UAAY,wCAAwCsC,EAAMhE,OACvEiD,EAAanB,aAAa,UAAWkC,EAAMrE,IAE3C,IACM0F,EACFxD,EAAUiE,QAAQ7C,GAElBpB,EAAU/B,YAAYmD,GAExBtB,QAAQ2D,IAAI,sCAAuCrC,EACpD,CAAC,MAAOb,GAEP,YADAT,QAAQS,MAAM,kCAAmCA,EAElD,CAED4C,EAAa1D,IAAI0C,EAAMrE,GAAIsD,EAC5B,CAID,IACEA,EAAarD,UAAY,8CACUoE,EAAM+B,OAAS,wDACb/B,EAAME,4BACvC/D,EAAc,kEAAoE,eAEtFwB,QAAQ2D,IAAI,8BAA+BrC,EAC5C,CAAC,MAAOb,GACPT,QAAQS,MAAM,+BAAgCA,EAC/C,CAED,GAAIjC,EAAa,CACf,MAAM6F,EAAc/C,EAAauC,cAAc,sBAC3CQ,GACFA,EAAYC,iBAAiB,SAAS,KAChCpE,GAAaoB,IACfpB,EAAUqE,YAAYjD,GACtB+B,EAAajC,OAAOiB,EAAMrE,IAC1BwG,EAAUtB,QAAQb,EAAMrE,IACxBgC,QAAQ2D,IAAI,mBAAoBtB,EAAMrE,IACvC,IAEHgC,QAAQ2D,IAAI,yCAA0CtB,EAAMrE,KAE5DgC,QAAQyE,KAAK,oCAAqCpC,EAAMrE,GAE3D,CAGGqE,EAAM/D,UAAY+D,EAAM/D,SAAW,GACrCuC,YAAW,KACLX,GAAaoB,GAAgBpB,EAAU6D,SAASzC,KAClDpB,EAAUqE,YAAYjD,GACtB+B,EAAajC,OAAOiB,EAAMrE,IAC1BgC,QAAQ2D,IAAI,wBAAyBtB,EAAMrE,IAC5C,GACAqE,EAAM/D,SACV,EAIGoG,EAAkBrC,IACtB,MAAMrE,EAAKqE,EAAMrE,GACXsD,EAAe+B,EAAavD,IAAI9B,GAClCsD,GAAgBpB,GAAaA,EAAU6D,SAASzC,IAClDpB,EAAUqE,YAAYjD,GACtB+B,EAAajC,OAAOpD,GACpBgC,QAAQ2D,IAAI,mCAAoC3F,IAEhDgC,QAAQyE,KAAK,wCAAyCzG,EACvD,EAIH,IACEsF,EAAiB3B,EAAG,SAAUuC,GAC9BX,EAAkB5B,EAAG,UAAW+C,GAChC1E,QAAQ2D,IAAI,0CACb,CAAC,MAAOlD,GACPT,QAAQS,MAAM,gCAAiCA,EAChD,GAgBYkE,QAbC,KACQ,oBAAXjH,SACXsC,QAAQ2D,IAAI,4BACZL,SAAAA,EAAgBvB,MAChBwB,SAAAA,EAAiBxB,MACb7B,IACFA,EAAUqB,SACV8B,EAAauB,QACb1E,EAAY,MAEdsD,GAAc,EAAK,EAItB,EA1JoB,GA6JC,oBAAX9F,QAETmD,YAAW,KACTb,QAAQ2D,IAAI,8CACZ,MAAMkB,EAAiBnH,OAAeoH,sBAAwB,CAC5DvG,SAAU,YACVmF,aAAa,EACblF,aAAa,GAEfwB,QAAQ2D,IAAI,kBAAmBkB,GAC/BzB,EAAauB,UACbvB,EAAaK,KAAKoB,EAActG,SAAUsG,EAAcnB,YAAamB,EAAcrG,YAAY,GAC9F,GAIQ,MAAAuG,EAIR,EAAGxG,WAAW,YAAamF,eAAc,EAAMlF,eAAc,MAEhEwG,EAAAA,WAAU,KACR,GAAsB,oBAAXtH,OAAX,CAEA,IACEsC,QAAQ2D,IAAI,oCAAqC,CAAEpF,WAAUmF,cAAalF,gBACzEd,OAAeoH,qBAAuB,CAAEvG,WAAUmF,cAAalF,eAChE4E,EAAauB,UACbvB,EAAaK,KAAKlF,EAAUmF,EAAalF,EAC1C,CAAC,MAAOiC,GACPT,QAAQS,MAAM,gCAAiCA,EAChD,CAED,MAAO,KACL2C,EAAauB,SAAS,CAZkB,CAazC,GACA,CAACpG,EAAUmF,EAAalF,IAGpByG,EAAK,QAAAlH,cAAA,MAAA,CAAAgC,UAAW,qCAAqCxB,IAAYT,MAAO,CAAEgG,QAAS,WA+B/EzB,EAAQmC,4DA3BM,KAClB,CACLlC,KAAM,CAACC,EAAiBhD,IACtBiF,EAAUlC,KAAKC,EAAShD,GAC1BiD,QAAS,CAACD,EAAiBhD,IACzBiF,EAAUhC,QAAQD,EAAShD,GAC7BkB,MAAO,CAAC8B,EAAiBhD,IACvBiF,EAAU/D,MAAM8B,EAAShD,GAC3BkD,KAAM,CAACF,EAAiBhD,IACtBiF,EAAU/B,KAAKF,EAAShD,GAC1BmD,QAAS,CAACH,EAAiBhD,IACzBiF,EAAU9B,QAAQH,EAAShD,GAC7BoD,QAAS,CAACJ,EAAiBhD,IACzBiF,EAAU7B,QAAQJ,EAAShD,GAC7BqD,SAAU,CACRC,EACAqC,EACA3F,IACGiF,EAAU5B,SAASC,EAASqC,EAAU3F,GAC3C0D,cAAgBjF,GAAewG,EAAUvB,cAAcjF,GACvDkF,QAAUlF,GAAewG,EAAUtB,QAAQlF,GAC3CQ,YAAcR,GAAewG,EAAUtB,QAAQlF,GAC/CmF,SAAU,IAAMqB,EAAUrB,uBC5IvB,MAAMgC,EAAe9C,yDAjF1B,WAAA+C,GAEwB,oBAAX1H,QACTD,GAEH,CAED,IAAA6E,CAAKC,EAAiBhD,GACpB,OAAO8C,EAAMC,KAAKC,EAAShD,EAC5B,CAED,OAAAiD,CAAQD,EAAiBhD,GACvB,OAAO8C,EAAMG,QAAQD,EAAShD,EAC/B,CAED,KAAAkB,CAAM8B,EAAiBhD,GACrB,OAAO8C,EAAM5B,MAAM8B,EAAShD,EAC7B,CAED,IAAAkD,CAAKF,EAAiBhD,GACpB,OAAO8C,EAAMI,KAAKF,EAAShD,EAC5B,CAED,OAAAmD,CAAQH,EAAiBhD,GACvB,OAAO8C,EAAMK,QAAQH,EAAShD,EAC/B,CAED,OAAA2D,CAAQlF,GACNqE,EAAM7D,YAAYR,EACnB,CAED,QAAAmF,GACEd,EAAMc,UACP,iCAIH,WAAAiC,GACEC,KAAQ9G,SAA2C,YACnD8G,KAAW3B,aAAY,EACvB2B,KAAMC,OAAkB,GAEhBD,KAAiBE,kBAAwB,KACzCF,KAAkBG,mBAAwB,IAmCnD,CAjCC,QAAAC,GAEE,MAAMC,EAAqB/D,EAAG,UAAWU,IACnCA,EAAM9D,WAAa8G,KAAK9G,WACtB8G,KAAK3B,YACP2B,KAAKC,OAAS,CAACjD,KAAUgD,KAAKC,QAE9BD,KAAKC,OAAS,IAAID,KAAKC,OAAQjD,GAElC,IAEHgD,KAAKE,kBAAoBG,EAAmB3D,IAE5C,MAAM4D,EAAsBhE,EAAG,WAAYU,IACzCgD,KAAKC,OAASD,KAAKC,OAAOM,QAAOzE,GAAKA,EAAEnD,KAAOqE,EAAMrE,IAAG,IAE1DqH,KAAKG,mBAAqBG,EAAoB5D,GAC/C,CAED,WAAA8D,GAEMR,KAAKE,mBACPF,KAAKE,oBAGHF,KAAKG,oBACPH,KAAKG,oBAER,CAED,aAAAM,CAAc9H,GACZqE,EAAM7D,YAAYR,EACnB,oBClBI,MAAM+H,EAAU1D,0DArDjB,SAAe9C,GAEK,oBAAX7B,QACPD,IAIA8B,GACAyG,OAAOC,OAAO5D,EAAO,CAAEjE,eAAgBmB,IAI3C,MAAM+D,EAAiB3B,EAAG,UAAWU,IACjC,MAAMnC,ELqCR,SAAuB3B,GACzB,GAAIhB,EAAWqC,IAAIrB,GAEf,OADAyB,QAAQC,MAAM,qCAAsC1B,GAC7ChB,EAAWuC,IAAIvB,GAG1B,MAAM,IAAI2H,MAAM,4BAA4B3H,qBAChD,CK5C0B4H,CAAa9D,EAAM9D,UAC/B+C,ECxBR,SAAmCI,GACrC,MAAM1D,GAAEA,EAAEK,KAAEA,EAAIkE,QAAEA,EAAO6B,MAAEA,EAAK5F,YAAEA,EAAWI,YAAEA,GAAgB8C,EAEzD0E,EAAqBxI,SAASG,cAAc,OAMlD,GALAqI,EAAmBpI,GAAK,eAAeA,IACvCoI,EAAmBrG,UAAY,wCAAwC1B,KAAQO,GAAe,KAC9FwH,EAAmBjG,aAAa,OAAQ,SAGpCiE,EAAO,CACP,MAAMiC,EAA0BzI,SAASG,cAAc,OACvDsI,EAAwBtG,UAAY,oBACpCsG,EAAwBC,YAAclC,EACtCgC,EAAmBjI,YAAYkI,EAClC,CAGD,MAAME,EAA4B3I,SAASG,cAAc,OAMzD,GALAwI,EAA0BxG,UAAY,sBACtCwG,EAA0BD,YAAc/D,EACxC6D,EAAmBjI,YAAYoI,GAG3B/H,EAAa,CACb,MAAM6F,EAAczG,SAASG,cAAc,UAC3CsG,EAAYtE,UAAY,oBACxBsE,EAAYpG,UAAY,UACxBoG,EAAYlE,aAAa,aAAc,SACvCkE,EAAYmC,QAAU,KAElB,MAAM5E,EAAQ,IAAI6E,YAAY,sBAAuB,CAAEC,OAAQ,CAAE1I,QACjEJ,SAAS+I,cAAc/E,EAAM,EAEjCwE,EAAmBjI,YAAYkG,EAClC,CAYD,OATI3C,EAAYkF,UACZR,EAAmB9B,iBAAiB,SAAUuC,IAEpCA,EAAEC,OAAuBC,QAAQ,uBACnCrF,EAAYkF,SACf,IAELR,EAAmBtI,MAAMkJ,OAAS,WAE/BZ,CACX,CDvB6Ba,CAAyB5E,IAG1C9C,eAAAA,EAASmE,aACTxD,EAAUiE,QAAQ7C,GAElBpB,EAAU/B,YAAYmD,GAI1B,MAAMwE,EAAiBe,UACfA,EAAEH,OAAO1I,KAAOqE,EAAMrE,KACT,QAAbkJ,EAAA7E,EAAMa,eAAO,IAAAgE,GAAAA,EAAAC,KAAA9E,EAAGA,EAAMrE,IACtBsD,EAAaC,SAChB,EAEL3D,SAAS0G,iBAAiB,gBAAiBwB,GAGvCzD,EAAM/D,UAAY+D,EAAM/D,SAAW,GACnCuC,YAAW,WACS,QAAhBqG,EAAA7E,EAAMa,eAAU,IAAAgE,GAAAA,EAAAC,KAAA9E,EAAAA,EAAMrE,IACtBsD,EAAaC,QAAQ,GACtBc,EAAM/D,UAMbgD,EAAagD,iBAAiB,UAHd,KACZ1G,SAASwJ,oBAAoB,gBAAiBtB,EAA+B,GAEhC,CAAEuB,MAAM,GAAO,IAIpE,MAAO,KACH/D,EAAevB,KAAK,CAE5B,cEpDiB,MAAAkD,EAAQqC,EACRC,EAAUC,EACVC,EAAUC"}