{"version":3,"file":"vanilla.esm.js","sources":["../src/core/container.ts","../src/core/animation.ts","../src/dom/style.ts","../src/core/bro-toastify.tsx","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement | null {\r\n    if (typeof window === 'undefined') {\r\n        return null; // Return null during SSR\r\n    }\r\n\r\n    if (containers.has(position!)) {\r\n        const existingContainer = containers.get(position!)!;\r\n        if (document.body.contains(existingContainer)) {\r\n            return existingContainer;\r\n        } else {\r\n            // Container exists in our map but not in DOM, re-append it\r\n            document.body.appendChild(existingContainer);\r\n            return existingContainer;\r\n        }\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `broToastify-container broToastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions[\"position\"]): HTMLElement | null {\r\n    if (typeof window === \"undefined\") {\r\n        return null // Return null during SSR\r\n    }\r\n\r\n    // If container exists, return it\r\n    if (containers.has(position!)) {\r\n        const container = containers.get(position!)!\r\n\r\n        // Make sure it's still in the DOM\r\n        if (!document.body.contains(container)) {\r\n            document.body.appendChild(container)\r\n        }\r\n\r\n        return container\r\n    }\r\n\r\n    // Otherwise create a new one\r\n    return createContainer(position)\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    if (typeof window === \"undefined\") {\r\n      return // Skip during SSR\r\n    }\r\n  \r\n    console.debug(\"Removing all containers\")\r\n    containers.forEach((container) => {\r\n      if (document.body.contains(container)) {\r\n        container.remove()\r\n      }\r\n    })\r\n    containers.clear()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport type AnimationType = 'fade' | 'slide' | 'zoom' | 'flip' | 'bounce' | 'none';\r\n\r\nexport type AnimationDirection = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport interface AnimationOptions {\r\n  type: AnimationType;\r\n  duration: number;\r\n  direction?: AnimationDirection;\r\n  easing?: string;\r\n}\r\n\r\nexport const defaultAnimationOptions: AnimationOptions = {\r\n  type: 'fade',\r\n  duration: 300,\r\n  easing: 'ease'\r\n};\r\n\r\nexport function getAnimationKeyframes(type: AnimationType, direction?: AnimationDirection): string {\r\n  switch (type) {\r\n    case 'fade':\r\n      return `\r\n        @keyframes broToastify-fade-in {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        @keyframes broToastify-fade-out {\r\n          from { opacity: 1; }\r\n          to { opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'slide':\r\n      let translateFrom = 'translateY(-100%)';\r\n      let translateTo = 'translateY(0)';\r\n      \r\n      if (direction === 'right') {\r\n        translateFrom = 'translateX(100%)';\r\n        translateTo = 'translateX(0)';\r\n      } else if (direction === 'bottom') {\r\n        translateFrom = 'translateY(100%)';\r\n        translateTo = 'translateY(0)';\r\n      } else if (direction === 'left') {\r\n        translateFrom = 'translateX(-100%)';\r\n        translateTo = 'translateX(0)';\r\n      }\r\n      \r\n      return `\r\n        @keyframes broToastify-slide-in {\r\n          from { transform: ${translateFrom}; opacity: 0; }\r\n          to { transform: ${translateTo}; opacity: 1; }\r\n        }\r\n        @keyframes broToastify-slide-out {\r\n          from { transform: ${translateTo}; opacity: 1; }\r\n          to { transform: ${translateFrom}; opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'zoom':\r\n      return `\r\n        @keyframes broToastify-zoom-in {\r\n          from { transform: scale(0.5); opacity: 0; }\r\n          to { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-zoom-out {\r\n          from { transform: scale(1); opacity: 1; }\r\n          to { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'flip':\r\n      return `\r\n        @keyframes broToastify-flip-in {\r\n          from { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n          to { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-flip-out {\r\n          from { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n          to { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'bounce':\r\n      return `\r\n        @keyframes broToastify-bounce-in {\r\n          0% { transform: scale(0.5); opacity: 0; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-bounce-out {\r\n          0% { transform: scale(1); opacity: 1; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'none':\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  options: AnimationOptions = defaultAnimationOptions,\r\n  isEnter: boolean = true\r\n): void {\r\n  const { type, duration, easing } = options;\r\n  \r\n  if (type === 'none') return;\r\n  \r\n  const animationName = `broToastify-${type}-${isEnter ? 'in' : 'out'}`;\r\n  \r\n  element.style.animation = `${animationName} ${duration}ms ${easing} forwards`;\r\n  \r\n  // Clean up after animation completes\r\n  element.addEventListener('animationend', () => {\r\n    element.style.animation = '';\r\n  }, { once: true });\r\n}\r\n","import { getAnimationKeyframes } from \"../core/animation\"\r\n\r\n// Flag to track if styles have been injected\r\nlet stylesInjected = false\r\n\r\nexport function getBroToastifyStyles(): string {\r\n  return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      display: flex;\r\n      flex-direction: column;\r\n      opacity: 1 !important;\r\n      visibility: visible !important;\r\n    }\r\n\r\n    .broToastify-default {\r\n      background-color: rgb(240, 241, 240);\r\n      color: #333;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n\r\n    .broToastify-loader-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }   \r\n\r\n    .broToastify-loader {\r\n      border: 4px solid #f3f3f3;\r\n      border-top: 4px solid #3498db;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 20px;\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    .broToastify-loader-message {\r\n      font-size: 0.875rem;\r\n      color: #333;\r\n      animation: fadeIn 0.3s ease-in-out;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    @keyframes fadeIn {\r\n      0% { opacity: 0; transform: translateY(-10px); }\r\n      100% { opacity: 1; transform: translateY(0); }\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n      font-size: 1rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n    }\r\n    \r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"fade\") : \"\"}\r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"slide\", \"top\") : \"\"}\r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"zoom\") : \"\"}\r\n    \r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport function injectStyles() {\r\n  if (typeof window === \"undefined\" || stylesInjected) return\r\n\r\n  const styleId = \"bro-toastify-styles\"\r\n  if (document.getElementById(styleId)) {\r\n    stylesInjected = true\r\n    return\r\n  }\r\n\r\n  try {\r\n    const style = document.createElement(\"style\")\r\n    style.id = styleId\r\n    style.innerHTML = getBroToastifyStyles()\r\n    document.head.appendChild(style)\r\n    stylesInjected = true\r\n    console.log(\"Bro-toastify styles injected\")\r\n  } catch (error) {\r\n    console.error(\"Failed to inject bro-toastify styles:\", error)\r\n  }\r\n}\r\n","import { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\nif (typeof window !== 'undefined') {\r\n    injectStyles();\r\n}\r\n\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: \"default\",\r\n    duration: 3000,\r\n    position: \"top-right\",\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify | undefined {\r\n    if (typeof window === 'undefined') {\r\n        return undefined; // Prevent toast creation during SSR\r\n    }\r\n\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            dismissBroToastify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroToastify(id: string): void {\r\n    if (typeof window === \"undefined\") {\r\n      return // Skip during SSR\r\n    }\r\n  \r\n    const BroToastify = Array.from(broToastifys.values()).find((t) => t.id === id)\r\n  \r\n    if (BroToastify) {\r\n      broToastifys.delete(id) // Remove the toast from the Map\r\n      emit(\"dismiss\", BroToastify)\r\n  \r\n      if (BroToastify.onClose) {\r\n        BroToastify.onClose()\r\n      }\r\n    }\r\n  }\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    if (typeof window === 'undefined') {\r\n        return; // Prevent execution during SSR\r\n    }\r\n\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((broToastify) => {\r\n        dismissBroToastify(broToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): { off: () => void } {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return {\r\n        off: () => {\r\n            const callbacks = listeners.get(event);\r\n            if (callbacks) {\r\n                const index = callbacks.indexOf(callback);\r\n                if (index !== -1) {\r\n                    callbacks.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nconst toast = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'loading', ...options }),\r\n    promises: (\r\n        promise: Promise<any>,\r\n        message: { loading: string, success: string, error: string },\r\n        options?: Partial<BroToastifyToastifyOptions>\r\n    ) => {\r\n        if (typeof window === 'undefined') {\r\n            return undefined; // Prevent execution during SSR\r\n        }\r\n\r\n        const id = generateId();\r\n\r\n        createBroToastify({ id, message: message.loading, type: 'loading', ...options });\r\n\r\n        promise\r\n            .then((result) => {\r\n                dismissBroToastify(id)\r\n                createBroToastify({ message: message.success, type: 'success', ...options });\r\n                return result\r\n            })\r\n            .catch((error) => {\r\n                dismissBroToastify(id)\r\n                createBroToastify({ message: message.error, type: 'error', ...options });\r\n                throw error\r\n            });\r\n        return { id };\r\n    },\r\n    isToastActive: (id: string): boolean => {\r\n        return !!Array.from(broToastifys.values()).find((toast) => toast.id === id);\r\n    },\r\n    dismiss: (id: string) => dismissBroToastify(id),\r\n    dismissible: (id: string) => dismissBroToastify(id),\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\nexport default toast;\r\n\r\n\r\n","import toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): () => void {\r\n    // Inject styles\r\n    if (typeof window !== 'undefined') {\r\n        injectStyles();\r\n    }\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(toast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    const createListener = on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container?.prepend(toastElement);\r\n        } else {\r\n            container?.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        const handleDismiss = (e: CustomEvent) => {\r\n            if (e.detail.id === toast.id) {\r\n                toast.dismiss?.(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        };\r\n        document.addEventListener('toast:dismiss', handleDismiss as EventListener);\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                toast.dismiss?.(toast.id); // Use dismiss method\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            document.removeEventListener('toast:dismiss', handleDismiss as EventListener);\r\n        };\r\n        toastElement.addEventListener('remove', cleanup, { once: true });\r\n    });\r\n\r\n    // Cleanup on module unload (optional, if needed)\r\n    return () => {\r\n        createListener.off();\r\n    };\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const vanilla = toast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `broToastify-${id}`;\r\n    broToastifyElement.className = `broToastify-notification broToastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'broToastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'broToastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'broToastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('broToastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.broToastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}"],"names":["containers","Map","createContainer","position","window","has","existingContainer","get","document","body","contains","appendChild","console","debug","container","createElement","className","setAttribute","style","top","right","left","transform","bottom","error","set","getAnimationKeyframes","type","direction","translateFrom","translateTo","stylesInjected","injectStyles","styleId","getElementById","id","innerHTML","head","log","defaultOptions","duration","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","generateId","Date","now","toString","Math","random","substring","createBroToastify","options","mergedOptions","BroToastify","createdAt","emit","setTimeout","dismissBroToastify","Array","from","values","find","t","delete","onClose","event","data","callbacks","forEach","callback","toast","show","message","success","info","warning","loading","promises","promise","then","result","catch","isToastActive","dismiss","clearAll","broToastify","init","Object","assign","createListener","getContainer","toastElement","title","broToastifyElement","broToastifyTitleElement","textContent","broToastifyMessageElement","closeButton","onclick","CustomEvent","detail","dispatchEvent","onClick","addEventListener","e","target","closest","cursor","createBroToastifyElement","newestOnTop","prepend","handleDismiss","remove","cleanup","removeEventListener","once","push","off","index","indexOf","splice","vanilla"],"mappings":"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"}