{"version":3,"file":"index.js","sources":["../src/core/container.ts","../src/core/animation.ts","../src/dom/style.ts","../src/core/bro-toastify.ts","../src/adapters/react/index.tsx","../src/adapters/angular/index.ts","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts","../src/index.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement | null {\r\n    if (typeof window === 'undefined') {\r\n        return null; // Return null during SSR\r\n    }\r\n\r\n    if (containers.has(position!)) {\r\n        const existingContainer = containers.get(position!)!;\r\n        existingContainer.className = `broToastify-container broToastify-${position}`;\r\n        return existingContainer;\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `broToastify-container broToastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions['position']): HTMLElement {\r\n    if (containers.has(position!)) {\r\n        console.debug('Retrieving container for position:', position);\r\n        return containers.get(position!)!;\r\n    }\r\n\r\n    throw new Error(`Container with position \"${position}\" does not exist.`);\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    console.debug('Removing all containers');\r\n    containers.forEach((container) => {\r\n        container.remove();\r\n    });\r\n    containers.clear();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport type AnimationType = 'fade' | 'slide' | 'zoom' | 'flip' | 'bounce' | 'none';\r\n\r\nexport type AnimationDirection = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport interface AnimationOptions {\r\n  type: AnimationType;\r\n  duration: number;\r\n  direction?: AnimationDirection;\r\n  easing?: string;\r\n}\r\n\r\nexport const defaultAnimationOptions: AnimationOptions = {\r\n  type: 'fade',\r\n  duration: 300,\r\n  easing: 'ease'\r\n};\r\n\r\nexport function getAnimationKeyframes(type: AnimationType, direction?: AnimationDirection): string {\r\n  switch (type) {\r\n    case 'fade':\r\n      return `\r\n        @keyframes broToastify-fade-in {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        @keyframes broToastify-fade-out {\r\n          from { opacity: 1; }\r\n          to { opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'slide':\r\n      let translateFrom = 'translateY(-100%)';\r\n      let translateTo = 'translateY(0)';\r\n      \r\n      if (direction === 'right') {\r\n        translateFrom = 'translateX(100%)';\r\n        translateTo = 'translateX(0)';\r\n      } else if (direction === 'bottom') {\r\n        translateFrom = 'translateY(100%)';\r\n        translateTo = 'translateY(0)';\r\n      } else if (direction === 'left') {\r\n        translateFrom = 'translateX(-100%)';\r\n        translateTo = 'translateX(0)';\r\n      }\r\n      \r\n      return `\r\n        @keyframes broToastify-slide-in {\r\n          from { transform: ${translateFrom}; opacity: 0; }\r\n          to { transform: ${translateTo}; opacity: 1; }\r\n        }\r\n        @keyframes broToastify-slide-out {\r\n          from { transform: ${translateTo}; opacity: 1; }\r\n          to { transform: ${translateFrom}; opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'zoom':\r\n      return `\r\n        @keyframes broToastify-zoom-in {\r\n          from { transform: scale(0.5); opacity: 0; }\r\n          to { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-zoom-out {\r\n          from { transform: scale(1); opacity: 1; }\r\n          to { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'flip':\r\n      return `\r\n        @keyframes broToastify-flip-in {\r\n          from { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n          to { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-flip-out {\r\n          from { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n          to { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'bounce':\r\n      return `\r\n        @keyframes broToastify-bounce-in {\r\n          0% { transform: scale(0.5); opacity: 0; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-bounce-out {\r\n          0% { transform: scale(1); opacity: 1; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'none':\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  options: AnimationOptions = defaultAnimationOptions,\r\n  isEnter: boolean = true\r\n): void {\r\n  const { type, duration, easing } = options;\r\n  \r\n  if (type === 'none') return;\r\n  \r\n  const animationName = `broToastify-${type}-${isEnter ? 'in' : 'out'}`;\r\n  \r\n  element.style.animation = `${animationName} ${duration}ms ${easing} forwards`;\r\n  \r\n  // Clean up after animation completes\r\n  element.addEventListener('animationend', () => {\r\n    element.style.animation = '';\r\n  }, { once: true });\r\n}\r\n","import { getAnimationKeyframes } from '../core/animation';\r\n\r\n\r\nexport function getBroToastifyStyles(): string {\r\n  return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      pointer-events: none;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      pointer-events: auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    \r\n    .broToastify-paused .broToastify-progress {\r\n      animation-play-state: paused;\r\n    }\r\n    \r\n    /* Position-specific styles */\r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    /* Animation keyframes */\r\n    ${getAnimationKeyframes('fade')}\r\n    ${getAnimationKeyframes('slide', 'top')}\r\n    ${getAnimationKeyframes('zoom')}\r\n    \r\n    /* Responsive styles */\r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function injectStyles(): void {\r\n  if (typeof window === 'undefined') {\r\n    return; // Do nothing during SSR\r\n  }\r\n  console.debug('injectStyles function called'); // Log when the function is called\r\n\r\n  if (!document.getElementById('broToastify-styles')) {\r\n    const style = document.createElement('style');\r\n    style.id = 'broToastify-styles';\r\n    style.innerHTML = getBroToastifyStyles();\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Check if styles are already injected\r\n  if (document.getElementById('broToastify-styles')) {\r\n    console.debug('Styles are already injected'); // Log if styles are already present\r\n    return;\r\n  }\r\n\r\n  // Create style element\r\n  const styleElement = document.createElement('style');\r\n  console.debug('Creating style element:', styleElement); // Log the created style element\r\n\r\n  styleElement.id = 'broToastify-styles';\r\n  styleElement.textContent = getBroToastifyStyles();\r\n  console.debug('Generated styles:', styleElement.textContent); // Log the generated CSS content\r\n\r\n  // Append to head\r\n  if (document.head) {\r\n    document.head.appendChild(styleElement);\r\n    console.debug('Style element appended to head'); // Log when the style element is appended\r\n  } else {\r\n    console.error('document.head is not available'); // Log an error if document.head is missing\r\n  }\r\n}","import { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer, getContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\ninjectStyles(); // Ensure styles are injected\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: 'default',\r\n    duration: 3000,\r\n    position: 'top-right',\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify {\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            dismissBroTostify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroTostify(id: string): void {\r\n    const BroToastify = Array.from(broToastifys.values()).find((t) => t.id === id);\r\n\r\n    if (BroToastify) {\r\n        broToastifys.delete(id); // Remove the toast from the Map\r\n        emit('dismiss', BroToastify);\r\n\r\n        if (BroToastify.onClose) {\r\n            BroToastify.onClose();\r\n        }\r\n\r\n        // Remove the toast element from the DOM\r\n        const toastElement = document.getElementById(`broToastify-${id}`);\r\n        if (toastElement) {\r\n            toastElement.remove();\r\n        }\r\n\r\n        broToastifys.delete(id);\r\n        console.debug('Toast dismissed:', id);\r\n    }\r\n}\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((BroToastify) => {\r\n        dismissBroTostify(BroToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): () => void {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return () => {\r\n        const callbacks = listeners.get(event);\r\n        if (callbacks) {\r\n            const index = callbacks.indexOf(callback);\r\n            if (index !== -1) {\r\n                callbacks.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nexport const broToastify = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n\r\n    dismissible: dismissBroTostify,\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\n\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { broToastify as coreToast, on } from '../../core/bro-toastify'\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\n\r\n// React component for toast container\r\nexport const ToastContainer: React.FC<{\r\n  position?: BroToastifyToastifyOptions['position'],\r\n  newestOnTop?: boolean\r\n  dismissible?: any\r\n}> = ({ \r\n  position = 'top-right',\r\n  newestOnTop = true,\r\n  dismissible\r\n}) => {\r\n  const [toasts, setToasts] = useState<BroToastify[]>([]);\r\n  \r\n  useEffect(() => {\r\n    // Subscribe to toast events\r\n    const createUnsubscribe = on('create', (toast: BroToastify) => {\r\n      setToasts((prev) => {\r\n        const newToasts = [...prev, toast];\r\n        return newestOnTop ? newToasts : newToasts.reverse();\r\n      });\r\n\r\n      if(!dismissible && toast.duration && toast.duration > 0) {\r\n        setTimeout(() => {\r\n          coreToast.dismissible(toast.id);\r\n        }, toast.duration);\r\n      }\r\n    });\r\n    \r\n    const dismissUnsubscribe = on('dismiss', (toast: BroToastify) => {\r\n      setToasts((prev) => prev.filter((t) => t.id !== toast.id));\r\n    });\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      createUnsubscribe();\r\n      dismissUnsubscribe();\r\n    };\r\n  }, [newestOnTop, dismissible]);\r\n  \r\n  return (\r\n    <div className={`broToastify-container broToastify-${position}`}>\r\n      {toasts.map(toast => (\r\n        <ToastItem key={toast.id} toast={toast} dismissible={!!dismissible} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Individual toast component\r\nconst ToastItem: React.FC<{ toast: BroToastify; dismissible: boolean }> = ({ toast, dismissible }) => {\r\n  const { id, type, message, title } = toast;\r\n  \r\n  const handleDismiss = useCallback(() => {\r\n    coreToast.dismissible(id);\r\n  }, [id]);\r\n  \r\n  return (\r\n    <div \r\n      className={`broToastify-notification broToastify-${type} ${toast.customClass || ''}`}\r\n      role=\"alert\"\r\n      onClick={toast.onClick}\r\n    >\r\n      {title && <div className=\"broToastify-title\">{title}</div>}\r\n      <div className=\"broToastify-message\">{message}</div>\r\n      \r\n      {dismissible && (\r\n        <button \r\n          className=\"broToastify-close\" \r\n          aria-label=\"Close\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDismiss();\r\n          }}\r\n        >\r\n          &times;\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook for using toast\r\nexport const broToastify = () => {\r\n  return {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.show(message, options),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.success(message, options),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.error(message, options),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.info(message, options),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.warning(message, options),\r\n    dismiss: (id:string) => coreToast.dismissible(id),\r\n    clearAll: coreToast.clearAll\r\n  };\r\n};\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;","\r\nimport { broToastify as coreToast, on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Toast service for Angular\r\nexport class ToastService {\r\n  constructor() {\r\n    // Inject styles when service is instantiated\r\n    if (typeof window !== 'undefined') {\r\n      injectStyles();\r\n    }\r\n  }\r\n\r\n  show(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.show(message, options);\r\n  }\r\n\r\n  success(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.success(message, options);\r\n  }\r\n\r\n  error(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.error(message, options);\r\n  }\r\n\r\n  info(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.info(message, options);\r\n  }\r\n\r\n  warning(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.warning(message, options);\r\n  }\r\n\r\n  dismiss(id: string) {\r\n    coreToast.dismissible(id);\r\n  }\r\n\r\n  clearAll() {\r\n    coreToast.clearAll();\r\n  }\r\n}\r\n\r\n// Component class for ToastContainer\r\nexport class ToastContainerComponent {\r\n  position: BroToastifyToastifyOptions['position'] = 'top-right';\r\n  newestOnTop: boolean = true;\r\n  toasts: BroToastify[] = [];\r\n\r\n  private createUnsubscribe: (() => void) | null = null;\r\n  private dismissUnsubscribe: (() => void) | null = null;\r\n\r\n  ngOnInit() {\r\n    // Subscribe to toast events\r\n    this.createUnsubscribe = on('create', (toast: BroToastify) => {\r\n      if (toast.position === this.position) {\r\n        if (this.newestOnTop) {\r\n          this.toasts = [toast, ...this.toasts];\r\n        } else {\r\n          this.toasts = [...this.toasts, toast];\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dismissUnsubscribe = on('dismiss', (toast: BroToastify) => {\r\n      this.toasts = this.toasts.filter(t => t.id !== toast.id);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup\r\n    if (this.createUnsubscribe) {\r\n      this.createUnsubscribe();\r\n    }\r\n\r\n    if (this.dismissUnsubscribe) {\r\n      this.dismissUnsubscribe();\r\n    }\r\n  }\r\n\r\n  handleDismiss(id: string) {\r\n    coreToast.dismissible(id);\r\n  }\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;\r\n","import { broToastify as coreToast, on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): void {\r\n    // Inject styles\r\n    injectStyles();\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(coreToast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container.prepend(toastElement);\r\n        } else {\r\n            container.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        document.addEventListener('toast:dismiss', (e: any) => {\r\n            if (e.detail.id === toast.id) {\r\n                coreToast.dismissible(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        });\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                coreToast.dismissible(toast.id);\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n    });\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `bro-toastify-${id}`;\r\n    broToastifyElement.className = `bro-toastify-notification bro-toastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'bro-toastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'bro-toastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'bro-toastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('bro-toastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.bro-toastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}","export * from './core/bro-toastify';\r\nexport * from './core/types';\r\n\r\n// Export framework adapters\r\nimport * as ReactAdapter from './adapters/react';\r\nimport * as AngularAdapter from './adapters/angular';\r\nimport * as VanillaAdapter from './adapters/vanilla';\r\n// import * as VueAdapter from './adapters/vue';\r\n// import * as SvelteAdapter from './adapters/svelte';\r\n\r\n// Named exports for each framework\r\nexport const React = ReactAdapter;\r\nexport const Angular = AngularAdapter;\r\nexport const Vanilla = VanillaAdapter;\r\n// export const Vue = VueAdapter;\r\n// export const Svelte = SvelteAdapter;\r\n\r\n// Export toast as a named export\r\nexport { broToastify } from './core/bro-toastify';\r\n\r\n// Also create a default export for convenience\r\nexport { ToastContainer } from './adapters/react'; // Adjust the path if necessary\r\nimport { broToastify } from './core/bro-toastify';\r\nexport default broToastify;"],"names":["containers","Map","getAnimationKeyframes","type","direction","translateFrom","translateTo","getBroToastifyStyles","injectStyles","window","console","debug","document","getElementById","style","createElement","id","innerHTML","head","appendChild","styleElement","textContent","error","defaultOptions","duration","position","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","createBroToastify","options","mergedOptions","Date","now","toString","Math","random","substring","BroToastify","createdAt","set","has","existingContainer","get","className","container","setAttribute","top","right","left","transform","bottom","body","createContainer","emit","setTimeout","dismissBroTostify","Array","from","values","find","t","delete","onClose","toastElement","remove","clearBroToastify","forEach","on","event","callback","push","callbacks","index","indexOf","splice","data","broToastify","show","message","success","info","warning","clearAll","ToastContainer","newestOnTop","toasts","setToasts","useState","useEffect","createUnsubscribe","toast","prev","newToasts","reverse","coreToast","dismissUnsubscribe","filter","React","map","ToastItem","key","title","handleDismiss","useCallback","role","onClick","e","stopPropagation","dismiss","constructor","this","ngOnInit","ngOnDestroy","Object","assign","Error","getContainer","broToastifyElement","broToastifyTitleElement","broToastifyMessageElement","closeButton","onclick","CustomEvent","detail","dispatchEvent","addEventListener","target","closest","cursor","createBroToastifyElement","prepend","ReactAdapter","Angular","AngularAdapter","Vanilla","VanillaAdapter"],"mappings":"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"}