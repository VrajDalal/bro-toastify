{"version":3,"file":"index.js","sources":["../src/core/container.ts","../src/core/animation.ts","../src/dom/style.ts","../src/core/bro-toastify.ts","../src/adapters/react/index.tsx","../src/adapters/angular/index.ts","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts","../src/index.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement | null {\r\n    if (typeof window === 'undefined') {\r\n        return null; // Return null during SSR\r\n    }\r\n\r\n    if (containers.has(position!)) {\r\n        const existingContainer = containers.get(position!)!;\r\n        existingContainer.className = `broToastify-container broToastify-${position}`;\r\n        return existingContainer;\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `broToastify-container broToastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions['position']): HTMLElement {\r\n    if (containers.has(position!)) {\r\n        console.debug('Retrieving container for position:', position);\r\n        return containers.get(position!)!;\r\n    }\r\n\r\n    throw new Error(`Container with position \"${position}\" does not exist.`);\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    console.debug('Removing all containers');\r\n    containers.forEach((container) => {\r\n        container.remove();\r\n    });\r\n    containers.clear();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport type AnimationType = 'fade' | 'slide' | 'zoom' | 'flip' | 'bounce' | 'none';\r\n\r\nexport type AnimationDirection = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport interface AnimationOptions {\r\n  type: AnimationType;\r\n  duration: number;\r\n  direction?: AnimationDirection;\r\n  easing?: string;\r\n}\r\n\r\nexport const defaultAnimationOptions: AnimationOptions = {\r\n  type: 'fade',\r\n  duration: 300,\r\n  easing: 'ease'\r\n};\r\n\r\nexport function getAnimationKeyframes(type: AnimationType, direction?: AnimationDirection): string {\r\n  switch (type) {\r\n    case 'fade':\r\n      return `\r\n        @keyframes broToastify-fade-in {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        @keyframes broToastify-fade-out {\r\n          from { opacity: 1; }\r\n          to { opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'slide':\r\n      let translateFrom = 'translateY(-100%)';\r\n      let translateTo = 'translateY(0)';\r\n      \r\n      if (direction === 'right') {\r\n        translateFrom = 'translateX(100%)';\r\n        translateTo = 'translateX(0)';\r\n      } else if (direction === 'bottom') {\r\n        translateFrom = 'translateY(100%)';\r\n        translateTo = 'translateY(0)';\r\n      } else if (direction === 'left') {\r\n        translateFrom = 'translateX(-100%)';\r\n        translateTo = 'translateX(0)';\r\n      }\r\n      \r\n      return `\r\n        @keyframes broToastify-slide-in {\r\n          from { transform: ${translateFrom}; opacity: 0; }\r\n          to { transform: ${translateTo}; opacity: 1; }\r\n        }\r\n        @keyframes broToastify-slide-out {\r\n          from { transform: ${translateTo}; opacity: 1; }\r\n          to { transform: ${translateFrom}; opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'zoom':\r\n      return `\r\n        @keyframes broToastify-zoom-in {\r\n          from { transform: scale(0.5); opacity: 0; }\r\n          to { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-zoom-out {\r\n          from { transform: scale(1); opacity: 1; }\r\n          to { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'flip':\r\n      return `\r\n        @keyframes broToastify-flip-in {\r\n          from { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n          to { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-flip-out {\r\n          from { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n          to { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'bounce':\r\n      return `\r\n        @keyframes broToastify-bounce-in {\r\n          0% { transform: scale(0.5); opacity: 0; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-bounce-out {\r\n          0% { transform: scale(1); opacity: 1; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'none':\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  options: AnimationOptions = defaultAnimationOptions,\r\n  isEnter: boolean = true\r\n): void {\r\n  const { type, duration, easing } = options;\r\n  \r\n  if (type === 'none') return;\r\n  \r\n  const animationName = `broToastify-${type}-${isEnter ? 'in' : 'out'}`;\r\n  \r\n  element.style.animation = `${animationName} ${duration}ms ${easing} forwards`;\r\n  \r\n  // Clean up after animation completes\r\n  element.addEventListener('animationend', () => {\r\n    element.style.animation = '';\r\n  }, { once: true });\r\n}\r\n","import { getAnimationKeyframes } from '../core/animation';\r\n\r\n\r\nexport function getBroToastifyStyles(): string {\r\n  return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      pointer-events: none;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      pointer-events: auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .broToastify-default {\r\n      background-color:rgb(240, 241, 240);\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n\r\n    .broToastify-loader-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem; /* Space between loader and message */\r\n    }   \r\n\r\n    .broToastify-loader {\r\n      border: 4px solid #f3f3f3;\r\n      border-top: 4px solid #3498db;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 20px;\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    .broToastify-loader-message {\r\n      font-size: 0.875rem;\r\n      color: #333;\r\n      animation: fadeIn 1s ease-in-out;\r\n    }\r\n\r\n    /* Keyframes for loader spin */\r\n    @keyframes spin {\r\n      0% {\r\n        transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n\r\n    /* Keyframes for message fade-in animation */\r\n    @keyframes fadeIn {\r\n      0% {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n      }\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    \r\n    .broToastify-paused .broToastify-progress {\r\n      animation-play-state: paused;\r\n    }\r\n    \r\n    /* Position-specific styles */\r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    /* Animation keyframes */\r\n    ${getAnimationKeyframes('fade')}\r\n    ${getAnimationKeyframes('slide', 'top')}\r\n    ${getAnimationKeyframes('zoom')}\r\n    \r\n    /* Responsive styles */\r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function injectStyles(): void {\r\n  if (typeof window !== 'undefined') {\r\n    injectStyles()\r\n  }\r\n\r\n  if (!document.getElementById('broToastify-styles')) {\r\n    const style = document.createElement('style');\r\n    style.id = 'broToastify-styles';\r\n    style.innerHTML = getBroToastifyStyles();\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Check if styles are already injected\r\n  if (document.getElementById('broToastify-styles')) {\r\n    console.debug('Styles are already injected'); // Log if styles are already present\r\n    return;\r\n  }\r\n\r\n  // Create style element\r\n  const styleElement = document.createElement('style');\r\n  console.debug('Creating style element:', styleElement); // Log the created style element\r\n\r\n  styleElement.id = 'broToastify-styles';\r\n  styleElement.textContent = getBroToastifyStyles();\r\n  console.debug('Generated styles:', styleElement.textContent); // Log the generated CSS content\r\n\r\n  // Append to head\r\n  if (document.head) {\r\n    document.head.appendChild(styleElement);\r\n    console.debug('Style element appended to head'); // Log when the style element is appended\r\n  } else {\r\n    console.error('document.head is not available'); // Log an error if document.head is missing\r\n  }\r\n}","import { useEffect } from 'react';\r\nimport { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer, getContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\nif (typeof window !== 'undefined') {\r\n    injectStyles();\r\n}\r\n\r\nexport function useBroToastifyStyles() {\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            injectStyles();\r\n        }\r\n    }, []);\r\n}\r\n\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: 'default',\r\n    duration: 3000,\r\n    position: 'top-right',\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify | undefined {\r\n    if (typeof window === 'undefined') {\r\n        return undefined; // Prevent toast creation during SSR\r\n    }\r\n\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            dismissBroToastify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroToastify(id: string): void {\r\n    const BroToastify = Array.from(broToastifys.values()).find((t) => t.id === id);\r\n\r\n    if (BroToastify) {\r\n        broToastifys.delete(id); // Remove the toast from the Map\r\n        emit('dismiss', BroToastify);\r\n\r\n        if (BroToastify.onClose) {\r\n            BroToastify.onClose();\r\n        }\r\n\r\n        // Remove the toast element from the DOM\r\n        if (typeof window !== 'undefined') {\r\n            const toastElement = document.getElementById(`broToastify-${id}`);\r\n            if (toastElement) {\r\n                toastElement.remove();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    if (typeof window === 'undefined') {\r\n        return; // Prevent execution during SSR\r\n    }\r\n\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((broToastify) => {\r\n        dismissBroToastify(broToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): { off: () => void } {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return {\r\n        off: () => {\r\n            const callbacks = listeners.get(event);\r\n            if (callbacks) {\r\n                const index = callbacks.indexOf(callback);\r\n                if (index !== -1) {\r\n                    callbacks.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nconst toast = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'loading', ...options }),\r\n    promises: (\r\n        promise: Promise<any>,\r\n        message: { loading: string, success: string, error: string },\r\n        options?: Partial<BroToastifyToastifyOptions>\r\n    ) => {\r\n        if (typeof window === 'undefined') {\r\n            return undefined; // Prevent execution during SSR\r\n        }\r\n\r\n        const id = generateId();\r\n\r\n        createBroToastify({ id, message: message.loading, type: 'loading', ...options });\r\n\r\n        promise\r\n            .then((result) => {\r\n                createBroToastify({ id, message: message.success, type: 'success', ...options });\r\n                dismissBroToastify(id)\r\n                return result\r\n            })\r\n            .catch((error) => {\r\n                createBroToastify({ id, message: message.error, type: 'error', ...options });\r\n                dismissBroToastify(id)\r\n                throw error\r\n            });\r\n        return { id };\r\n    },\r\n    isToastActive: (id: string): boolean => {\r\n        return !!Array.from(broToastifys.values()).find((toast) => toast.id === id);\r\n    },\r\n    dismiss: (id: string) => dismissBroToastify(id),\r\n    dismissible: (id: string) => dismissBroToastify(id),\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\nexport default toast;\r\n\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\n\r\n// Client-only ToastContainer implementation\r\nconst ClientToastContainer: React.FC<{\r\n  position?: BroToastifyToastifyOptions['position'];\r\n  newestOnTop?: any;\r\n  dismissible?: any;\r\n}> = ({\r\n  position = 'top-right',\r\n  newestOnTop,\r\n  dismissible,\r\n}) => {\r\n    const containerRef = useRef<HTMLDivElement | null>(null);\r\n    const activeToastsRef = useRef<Map<string, HTMLElement>>(new Map());\r\n\r\n    useEffect(() => {\r\n      if (typeof window === 'undefined') return;\r\n\r\n      // Create or update the container (fixed missing dot in selector)\r\n      let container = document.querySelector(`.broToastify-container.broToastify-${position}`);\r\n      if (!container) {\r\n        container = document.createElement('div');\r\n        container.className = `broToastify-container broToastify-${position}`;\r\n        document.body.appendChild(container);\r\n      }\r\n      containerRef.current = container as HTMLDivElement;\r\n\r\n      const updateContainerPosition = (newPosition: string) => {\r\n        if (containerRef.current) {\r\n          // Remove previous position classes\r\n          containerRef.current.className = `broToastify-container broToastify-${newPosition}`;\r\n          // Move existing toasts to the new container\r\n          activeToastsRef.current.forEach((toastElement) => {\r\n            if (containerRef.current && !containerRef.current.contains(toastElement)) {\r\n              if (newestOnTop) {\r\n                containerRef.current.prepend(toastElement);\r\n              } else {\r\n                containerRef.current.appendChild(toastElement);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      const cleanupOldContainers = () => {\r\n        document.querySelectorAll('.broToastify-container').forEach((oldContainer) => {\r\n          if (oldContainer !== containerRef.current) {\r\n            oldContainer.remove();\r\n          }\r\n        });\r\n      };\r\n\r\n      const createHandler = (toasts: BroToastify) => {\r\n        if (!containerRef.current || !toast) return;\r\n\r\n        let toastElement = activeToastsRef.current.get(toasts.id);\r\n\r\n        if (!toastElement) {\r\n          toastElement = document.createElement('div');\r\n          toastElement.id = `broToastify-${toasts.id}`; // Match ID used in dismissBroToastify\r\n          toastElement.className = `broToastify-notification broToastify-${toasts.type}`;\r\n          toastElement.setAttribute('data-id', toasts.id);\r\n\r\n          if (newestOnTop) {\r\n            containerRef.current.prepend(toastElement);\r\n          } else {\r\n            containerRef.current.appendChild(toastElement);\r\n          }\r\n\r\n          activeToastsRef.current.set(toasts.id, toastElement);\r\n        }\r\n\r\n        toastElement.innerHTML = `\r\n        <div class=\"broToastify-title\">${toasts.title || ''}</div>\r\n        <div class=\"broToastify-message\">${toasts.message}</div>\r\n        ${dismissible ? `<button class=\"broToastify-close\" aria-label=\"Close\">×</button>` : ''}\r\n      `;\r\n\r\n        if (dismissible) {\r\n          const closeButton = toastElement.querySelector('.broToastify-close');\r\n          closeButton?.addEventListener('click', () => {\r\n            if (containerRef.current && toastElement) {\r\n              containerRef.current.removeChild(toastElement);\r\n              activeToastsRef.current.delete(toasts.id);\r\n              toast.dismiss(toasts.id);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (toasts.duration && toasts.duration > 0) {\r\n          setTimeout(() => {\r\n            if (containerRef.current && toastElement && containerRef.current.contains(toastElement)) {\r\n              containerRef.current.removeChild(toastElement);\r\n              activeToastsRef.current.delete(toasts.id);\r\n            }\r\n          }, toasts.duration);\r\n        }\r\n      };\r\n\r\n      const dismissHandler = (id: string) => {\r\n        const toastElement = activeToastsRef.current.get(id);\r\n        if (toastElement && containerRef.current && containerRef.current.contains(toastElement)) {\r\n          containerRef.current.removeChild(toastElement);\r\n          activeToastsRef.current.delete(id);\r\n        }\r\n      };\r\n\r\n      // Register event listeners\r\n      const createListener = on('create', createHandler);\r\n      const dismissListener = on('dismiss', dismissHandler);\r\n\r\n      // Update position if it changes\r\n      updateContainerPosition(position);\r\n      cleanupOldContainers();\r\n\r\n      // Cleanup on unmount (fixed incorrect listener cleanup)\r\n      return () => {\r\n        createListener.off();\r\n        dismissListener.off();\r\n        if (containerRef.current) {\r\n          containerRef.current.remove();\r\n          activeToastsRef.current.clear();\r\n        }\r\n      };\r\n    }, [position, newestOnTop, dismissible]);\r\n\r\n    return null;\r\n  };\r\n\r\n// Server-safe ToastContainer wrapper\r\nexport const Toaster: React.FC<{\r\n  position?: BroToastifyToastifyOptions['position'];\r\n  newestOnTop?: any;\r\n  dismissible?: any;\r\n}> = (props) => {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n  return <ClientToastContainer {...props} />;\r\n};\r\n\r\n// Hook for using toast\r\nexport const broToastify = () => {\r\n  return {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      toast.show(message, options),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      toast.success(message, options),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      toast.error(message, options),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      toast.info(message, options),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n      toast.warning(message, options),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) => {\r\n      const toasts = toast.loading(message, options);\r\n      return toasts;\r\n    },\r\n    promises: (\r\n      promise: Promise<any>,\r\n      messages: { loading: string; success: string; error: string },\r\n      options?: Partial<BroToastifyToastifyOptions>\r\n    ) => toast.promises(promise, messages, options),\r\n    isToastActive: (id: string) => toast.isToastActive(id),\r\n    dismiss: (id: string) => toast.dismissible(id),\r\n    dismissible: (id: string) => toast.dismissible(id),\r\n    clearAll: toast.clearAll,\r\n  };\r\n};\r\n\r\n// Export the core toast for direct usage\r\nexport default toast;","\r\nimport toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Toast service for Angular\r\nexport class ToastService {\r\n  constructor() {\r\n    // Inject styles when service is instantiated\r\n    if (typeof window !== 'undefined') {\r\n      injectStyles();\r\n    }\r\n  }\r\n\r\n  show(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.show(message, options);\r\n  }\r\n\r\n  success(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.success(message, options);\r\n  }\r\n\r\n  error(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.error(message, options);\r\n  }\r\n\r\n  info(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.info(message, options);\r\n  }\r\n\r\n  warning(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.warning(message, options);\r\n  }\r\n\r\n  dismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n\r\n  clearAll() {\r\n    toast.clearAll();\r\n  }\r\n}\r\n\r\n// Component class for ToastContainer\r\nexport class ToastContainerComponent {\r\n  position: BroToastifyToastifyOptions['position'] = 'top-right';\r\n  newestOnTop: boolean = true;\r\n  toasts: BroToastify[] = [];\r\n\r\n  private createUnsubscribe: (() => void) | null = null;\r\n  private dismissUnsubscribe: (() => void) | null = null;\r\n\r\n  ngOnInit() {\r\n    // Subscribe to toast events\r\n    const createSubscription = on('create', (toast: BroToastify) => {\r\n      if (toast.position === this.position) {\r\n        if (this.newestOnTop) {\r\n          this.toasts = [toast, ...this.toasts];\r\n        } else {\r\n          this.toasts = [...this.toasts, toast];\r\n        }\r\n      }\r\n    });\r\n    this.createUnsubscribe = createSubscription.off;\r\n\r\n    const dismissSubscription = on('dismiss', (toast: BroToastify) => {\r\n      this.toasts = this.toasts.filter(t => t.id !== toast.id);\r\n    });\r\n    this.dismissUnsubscribe = dismissSubscription.off;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup\r\n    if (this.createUnsubscribe) {\r\n      this.createUnsubscribe();\r\n    }\r\n\r\n    if (this.dismissUnsubscribe) {\r\n      this.dismissUnsubscribe();\r\n    }\r\n  }\r\n\r\n  handleDismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const angularToast = toast;\r\n","import toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): () => void {\r\n    // Inject styles\r\n    if (typeof window !== 'undefined') {\r\n        injectStyles();\r\n    }\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(toast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    const createListener = on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container.prepend(toastElement);\r\n        } else {\r\n            container.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        const handleDismiss = (e: CustomEvent) => {\r\n            if (e.detail.id === toast.id) {\r\n                toast.dismiss?.(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        };\r\n        document.addEventListener('toast:dismiss', handleDismiss as EventListener);\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                toast.dismiss?.(toast.id); // Use dismiss method\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            document.removeEventListener('toast:dismiss', handleDismiss as EventListener);\r\n        };\r\n        toastElement.addEventListener('remove', cleanup, { once: true });\r\n    });\r\n\r\n    // Cleanup on module unload (optional, if needed)\r\n    return () => {\r\n        createListener.off();\r\n    };\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const vanilla = toast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `broToastify-${id}`;\r\n    broToastifyElement.className = `broToastify-notification broToastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'broToastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'broToastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'broToastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('broToastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.broToastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}","export * from './core/bro-toastify';\r\nexport * from './core/types';\r\n\r\n// Export framework adapters\r\nimport * as ReactAdapter from './adapters/react';\r\nimport * as AngularAdapter from './adapters/angular';\r\nimport * as VanillaAdapter from './adapters/vanilla';\r\n// import * as VueAdapter from './adapters/vue';\r\n// import * as SvelteAdapter from './adapters/svelte';\r\n\r\n// Named exports for each framework\r\nexport const React = ReactAdapter;\r\nexport const Angular = AngularAdapter;\r\nexport const Vanilla = VanillaAdapter;\r\n// export const Vue = VueAdapter;\r\n// export const Svelte = SvelteAdapter;\r\n\r\n\r\n\r\n// Also create a default export for convenience\r\nexport { Toaster } from './adapters/react'; // Adjust the path if necessary\r\nimport toast from './core/bro-toastify';\r\nexport default toast;"],"names":["containers","Map","getAnimationKeyframes","type","direction","translateFrom","translateTo","getBroToastifyStyles","injectStyles","window","document","getElementById","style","createElement","id","innerHTML","head","appendChild","console","debug","styleElement","textContent","error","defaultOptions","duration","position","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","generateId","Date","now","toString","Math","random","substring","createBroToastify","options","mergedOptions","BroToastify","createdAt","set","has","existingContainer","get","className","container","setAttribute","top","right","left","transform","bottom","body","createContainer","emit","setTimeout","dismissBroToastify","Array","from","values","find","t","delete","onClose","toastElement","remove","clearBroToastify","forEach","broToastify","on","event","callback","push","off","callbacks","index","indexOf","splice","data","toast","show","message","success","info","warning","loading","promises","promise","then","result","catch","isToastActive","dismiss","clearAll","ClientToastContainer","newestOnTop","containerRef","useRef","activeToastsRef","useEffect","querySelector","current","createListener","toasts","prepend","title","closeButton","addEventListener","removeChild","contains","dismissListener","newPosition","querySelectorAll","oldContainer","clear","Toaster","props","React","messages","angularToast","constructor","this","createUnsubscribe","dismissUnsubscribe","ngOnInit","createSubscription","dismissSubscription","filter","ngOnDestroy","handleDismiss","vanilla","Object","assign","Error","getContainer","broToastifyElement","broToastifyTitleElement","broToastifyMessageElement","onclick","CustomEvent","detail","dispatchEvent","onClick","e","target","closest","cursor","createBroToastifyElement","_a","call","removeEventListener","once","ReactAdapter","Angular","AngularAdapter","Vanilla","VanillaAdapter"],"mappings":"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"}