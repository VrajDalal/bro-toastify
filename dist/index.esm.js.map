{"version":3,"file":"index.esm.js","sources":["../src/core/container.ts","../src/core/animation.ts","../src/dom/style.ts","../src/core/bro-toastify.ts","../src/adapters/react/index.tsx","../src/adapters/angular/index.ts","../src/adapters/svelte/index.ts","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts","../src/index.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement {\r\n    if (containers.has(position!)) {\r\n        return containers.get(position!)!\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `bro-toastify-container bro-toastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions['position']): HTMLElement {\r\n    if (containers.has(position!)) {\r\n        console.debug('Retrieving container for position:', position);\r\n        return containers.get(position!)!;\r\n    }\r\n\r\n    throw new Error(`Container with position \"${position}\" does not exist.`);\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    console.debug('Removing all containers');\r\n    containers.forEach((container) => {\r\n        container.remove();\r\n    });\r\n    containers.clear();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport type AnimationType = 'fade' | 'slide' | 'zoom' | 'flip' | 'bounce' | 'none';\r\n\r\nexport type AnimationDirection = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport interface AnimationOptions {\r\n  type: AnimationType;\r\n  duration: number;\r\n  direction?: AnimationDirection;\r\n  easing?: string;\r\n}\r\n\r\nexport const defaultAnimationOptions: AnimationOptions = {\r\n  type: 'fade',\r\n  duration: 300,\r\n  easing: 'ease'\r\n};\r\n\r\nexport function getAnimationKeyframes(type: AnimationType, direction?: AnimationDirection): string {\r\n  switch (type) {\r\n    case 'fade':\r\n      return `\r\n        @keyframes broToastify-fade-in {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        @keyframes broToastify-fade-out {\r\n          from { opacity: 1; }\r\n          to { opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'slide':\r\n      let translateFrom = 'translateY(-100%)';\r\n      let translateTo = 'translateY(0)';\r\n      \r\n      if (direction === 'right') {\r\n        translateFrom = 'translateX(100%)';\r\n        translateTo = 'translateX(0)';\r\n      } else if (direction === 'bottom') {\r\n        translateFrom = 'translateY(100%)';\r\n        translateTo = 'translateY(0)';\r\n      } else if (direction === 'left') {\r\n        translateFrom = 'translateX(-100%)';\r\n        translateTo = 'translateX(0)';\r\n      }\r\n      \r\n      return `\r\n        @keyframes broToastify-slide-in {\r\n          from { transform: ${translateFrom}; opacity: 0; }\r\n          to { transform: ${translateTo}; opacity: 1; }\r\n        }\r\n        @keyframes broToastify-slide-out {\r\n          from { transform: ${translateTo}; opacity: 1; }\r\n          to { transform: ${translateFrom}; opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'zoom':\r\n      return `\r\n        @keyframes broToastify-zoom-in {\r\n          from { transform: scale(0.5); opacity: 0; }\r\n          to { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-zoom-out {\r\n          from { transform: scale(1); opacity: 1; }\r\n          to { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'flip':\r\n      return `\r\n        @keyframes broToastify-flip-in {\r\n          from { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n          to { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-flip-out {\r\n          from { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n          to { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'bounce':\r\n      return `\r\n        @keyframes broToastify-bounce-in {\r\n          0% { transform: scale(0.5); opacity: 0; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-bounce-out {\r\n          0% { transform: scale(1); opacity: 1; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'none':\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  options: AnimationOptions = defaultAnimationOptions,\r\n  isEnter: boolean = true\r\n): void {\r\n  const { type, duration, easing } = options;\r\n  \r\n  if (type === 'none') return;\r\n  \r\n  const animationName = `broToastify-${type}-${isEnter ? 'in' : 'out'}`;\r\n  \r\n  element.style.animation = `${animationName} ${duration}ms ${easing} forwards`;\r\n  \r\n  // Clean up after animation completes\r\n  element.addEventListener('animationend', () => {\r\n    element.style.animation = '';\r\n  }, { once: true });\r\n}\r\n","import { getAnimationKeyframes } from '../core/animation';\r\n\r\n\r\nexport function getBroToastifyStyles(): string {\r\n    return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      pointer-events: none;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      pointer-events: auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    \r\n    .broToastify-paused .broToastify-progress {\r\n      animation-play-state: paused;\r\n    }\r\n    \r\n    /* Position-specific styles */\r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    /* Animation keyframes */\r\n    ${getAnimationKeyframes('fade')}\r\n    ${getAnimationKeyframes('slide', 'top')}\r\n    ${getAnimationKeyframes('zoom')}\r\n    \r\n    /* Responsive styles */\r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function injectStyles(): void {\r\n  console.debug('injectStyles function called'); // Log when the function is called\r\n\r\n  // Check if styles are already injected\r\n  if (document.getElementById('broToastify-styles')) {\r\n      console.debug('Styles are already injected'); // Log if styles are already present\r\n      return;\r\n  }\r\n\r\n  // Create style element\r\n  const styleElement = document.createElement('style');\r\n  console.debug('Creating style element:', styleElement); // Log the created style element\r\n\r\n  styleElement.id = 'broToastify-styles';\r\n  styleElement.textContent = getBroToastifyStyles();\r\n  console.debug('Generated styles:', styleElement.textContent); // Log the generated CSS content\r\n\r\n  // Append to head\r\n  if (document.head) {\r\n      document.head.appendChild(styleElement);\r\n      console.debug('Style element appended to head'); // Log when the style element is appended\r\n  } else {\r\n      console.error('document.head is not available'); // Log an error if document.head is missing\r\n  }\r\n}","import { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer, getContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\ninjectStyles(); // Ensure styles are injected\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: 'default',\r\n    duration: 3000,\r\n    position: 'top-right',\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify {\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            console.debug('Auto-dismissing toast with ID:', id);\r\n            dismissBroTostify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroTostify(id: string): void {\r\n    const BroToastify = broToastifys.get(id);\r\n    if (BroToastify) {\r\n        emit('dismissible', BroToastify);\r\n\r\n        if (BroToastify.onClose) {\r\n            BroToastify.onClose();\r\n        }\r\n\r\n        // Remove the toast element from the DOM\r\n        const toastElement = document.getElementById(`bro-toastify-${id}`);\r\n        if (toastElement) {\r\n            toastElement.remove();\r\n        }\r\n\r\n        broToastifys.delete(id);\r\n        console.debug('Toast dismissed:', id);\r\n    }\r\n}\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((BroToastify) => {\r\n        dismissBroTostify(BroToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): () => void {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return () => {\r\n        const callbacks = listeners.get(event);\r\n        if (callbacks) {\r\n            const index = callbacks.indexOf(callback);\r\n            if (index !== -1) {\r\n                callbacks.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nexport const broToastify = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n\r\n    dismissible: dismissBroTostify,\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\n\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { broToastify as coreToast, on } from '../../core/bro-toastify'\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\n\r\n// React component for toast container\r\nexport const ToastContainer: React.FC<{\r\n  position?: BroToastifyToastifyOptions['position'],\r\n  newestOnTop?: boolean\r\n}> = ({ \r\n  position = 'top-right',\r\n  newestOnTop = true\r\n}) => {\r\n  const [toasts, setToasts] = useState<BroToastify[]>([]);\r\n  \r\n  useEffect(() => {\r\n    // Subscribe to toast events\r\n    const createUnsubscribe = on('create', (toast: BroToastify) => {\r\n      if (toast.position === position) {\r\n        setToasts(prev => {\r\n          const newToasts = [...prev, toast];\r\n          return newestOnTop ? newToasts : newToasts.reverse();\r\n        });\r\n      }\r\n    });\r\n    \r\n    const dismissUnsubscribe = on('dismiss', (toast: BroToastify) => {\r\n      setToasts(prev => prev.filter(t => t.id !== toast.id));\r\n    });\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      createUnsubscribe();\r\n      dismissUnsubscribe();\r\n    };\r\n  }, [position, newestOnTop]);\r\n  \r\n  return (\r\n    <div className={`toast-container toast-${position}`}>\r\n      {toasts.map(toast => (\r\n        <ToastItem key={toast.id} toast={toast} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Individual toast component\r\nconst ToastItem: React.FC<{ toast: BroToastify }> = ({ toast }) => {\r\n  const { id, type, message, title, dismissible } = toast;\r\n  \r\n  const handleDismiss = useCallback(() => {\r\n    coreToast.dismissible(id);\r\n  }, [id]);\r\n  \r\n  return (\r\n    <div \r\n      className={`toast-notification toast-${type} ${toast.customClass || ''}`}\r\n      role=\"alert\"\r\n      onClick={toast.onClick}\r\n    >\r\n      {title && <div className=\"toast-title\">{title}</div>}\r\n      <div className=\"toast-message\">{message}</div>\r\n      \r\n      {dismissible && (\r\n        <button \r\n          className=\"toast-close\" \r\n          aria-label=\"Close\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDismiss();\r\n          }}\r\n        >\r\n          &times;\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook for using toast\r\nexport const broToastify = () => {\r\n  return {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.show(message, options),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.success(message, options),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.error(message, options),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.info(message, options),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) => \r\n      coreToast.warning(message, options),\r\n    dismissible: coreToast.dismissible,\r\n    clearAll: coreToast.clearAll\r\n  };\r\n};\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;","\r\nimport { broToastify as coreToast, on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Toast service for Angular\r\nexport class ToastService {\r\n  constructor() {\r\n    // Inject styles when service is instantiated\r\n    if (typeof window !== 'undefined') {\r\n      injectStyles();\r\n    }\r\n  }\r\n\r\n  show(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.show(message, options);\r\n  }\r\n\r\n  success(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.success(message, options);\r\n  }\r\n\r\n  error(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.error(message, options);\r\n  }\r\n\r\n  info(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.info(message, options);\r\n  }\r\n\r\n  warning(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return coreToast.warning(message, options);\r\n  }\r\n\r\n  dismiss(id: string) {\r\n    coreToast.dismiss(id);\r\n  }\r\n\r\n  clearAll() {\r\n    coreToast.clearAll();\r\n  }\r\n}\r\n\r\n// Component class for ToastContainer\r\nexport class ToastContainerComponent {\r\n  position: BroToastifyToastifyOptions['position'] = 'top-right';\r\n  newestOnTop: boolean = true;\r\n  toasts: BroToastify[] = [];\r\n\r\n  private createUnsubscribe: (() => void) | null = null;\r\n  private dismissUnsubscribe: (() => void) | null = null;\r\n\r\n  ngOnInit() {\r\n    // Subscribe to toast events\r\n    this.createUnsubscribe = on('create', (toast: BroToastify) => {\r\n      if (toast.position === this.position) {\r\n        if (this.newestOnTop) {\r\n          this.toasts = [toast, ...this.toasts];\r\n        } else {\r\n          this.toasts = [...this.toasts, toast];\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dismissUnsubscribe = on('dismiss', (toast: BroToastify) => {\r\n      this.toasts = this.toasts.filter(t => t.id !== toast.id);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup\r\n    if (this.createUnsubscribe) {\r\n      this.createUnsubscribe();\r\n    }\r\n\r\n    if (this.dismissUnsubscribe) {\r\n      this.dismissUnsubscribe();\r\n    }\r\n  }\r\n\r\n  handleDismiss(id: string) {\r\n    coreToast.dismiss(id);\r\n  }\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;\r\n","import { writable } from 'svelte/store';\r\nimport { broToastify as coreToast, on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Create a Svelte store for toasts\r\nexport const toasts = writable<Map<string, BroToastify>>(new Map());\r\n\r\n// Subscribe to toast events and update the store\r\nfunction setupToastStore() {\r\n  // Inject styles\r\n  if (typeof window !== 'undefined') {\r\n    injectStyles();\r\n  }\r\n\r\n  // Subscribe to toast events\r\n  on('create', (toast: BroToastify) => {\r\n    toasts.update((store: Map<string, BroToastify>) => {\r\n      const newStore = new Map(store);\r\n      newStore.set(toast.id, toast);\r\n      return newStore;\r\n    });\r\n  });\r\n\r\n  on('dismiss', (toast: BroToastify) => {\r\n    toasts.update((store: Map<string, BroToastify>) => {\r\n      const newStore = new Map(store);\r\n      newStore.delete(toast.id);\r\n      return newStore;\r\n    });\r\n  });\r\n}\r\n\r\n// Initialize the store\r\nsetupToastStore();\r\n\r\n// Toast functions for Svelte\r\nexport const toast = {\r\n\r\n  show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n    coreToast.show(message, options),\r\n\r\n  success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n    coreToast.success(message, options),\r\n\r\n  error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n    coreToast.error(message, options),\r\n\r\n  info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n    coreToast.info(message, options),\r\n\r\n  warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n    coreToast.warning(message, options),\r\n\r\n  dismiss: coreToast.dismiss,\r\n  clearAll: coreToast.clearAll\r\n};\r\n\r\n// Export ToastContainer component (would be a .svelte file in a real implementation)\r\n// This is a simplified representation\r\nexport const ToastContainer = {\r\n  // In a real implementation, this would be a Svelte component\r\n  // that subscribes to the toasts store and renders them\r\n};","import { broToastify as coreToast, on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): void {\r\n    // Inject styles\r\n    injectStyles();\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(coreToast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container.prepend(toastElement);\r\n        } else {\r\n            container.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        document.addEventListener('toast:dismiss', (e: any) => {\r\n            if (e.detail.id === toast.id) {\r\n                coreToast.dismiss(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        });\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                coreToast.dismiss(toast.id);\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n    });\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const toast = coreToast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `bro-toastify-${id}`;\r\n    broToastifyElement.className = `bro-toastify-notification bro-toastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'bro-toastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'bro-toastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'bro-toastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('bro-toastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.bro-toastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}","export * from './core/bro-toastify';\r\nexport * from './core/types';\r\n\r\n// Export framework adapters\r\nimport * as ReactAdapter from './adapters/react';\r\n// import * as VueAdapter from './adapters/vue';\r\nimport * as AngularAdapter from './adapters/angular';\r\nimport * as SvelteAdapter from './adapters/svelte';\r\nimport * as VanillaAdapter from './adapters/vanilla';\r\n\r\n// Named exports for each framework\r\nexport const React = ReactAdapter;\r\n// export const Vue = VueAdapter;\r\nexport const Angular = AngularAdapter;\r\nexport const Svelte = SvelteAdapter;\r\nexport const Vanilla = VanillaAdapter;\r\n\r\n// Export toast as a named export\r\nexport { broToastify } from './core/bro-toastify';\r\n\r\n// Also create a default export for convenience\r\nimport { broToastify } from './core/bro-toastify';\r\nexport default broToastify;\r\n\r\n\r\n// Export core functionality\r\n// export * from './core/types';\r\n\r\n// // Export framework adapters\r\n// import * as ReactAdapter from './adapters/react';\r\n// import * as AngularAdapter from './adapters/angular';\r\n// // import * as SvelteAdapter from './adapters/svelte';\r\n// import * as VanillaAdapter from './adapters/vanilla/index';\r\n\r\n// export const React = ReactAdapter;\r\n// export const Angular = AngularAdapter;\r\n// // export const Svelte = SvelteAdapter;\r\n\r\n// // Export Vanilla adapter directly\r\n// export const Vanilla = {\r\n//     ...VanillaAdapter,\r\n//     injectStyles: VanillaAdapter.injectStyles, // Ensure injectStyles is included``\r\n// };\r\n// // Optionally, keep broToastify if needed elsewhere\r\n// export { broToastify } from './core/bro-toastify';"],"names":["containers","Map","getAnimationKeyframes","type","direction","translateFrom","translateTo","injectStyles","console","debug","document","getElementById","styleElement","createElement","id","textContent","head","appendChild","error","defaultOptions","duration","position","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","createBroToastify","options","mergedOptions","Date","now","toString","Math","random","substring","BroToastify","createdAt","set","has","get","container","className","setAttribute","style","top","right","left","transform","bottom","body","createContainer","emit","setTimeout","dismissBroTostify","onClose","toastElement","remove","delete","clearBroToastify","Array","from","values","forEach","on","event","callback","push","callbacks","index","indexOf","splice","data","broToastify","show","message","success","info","warning","clearAll","ToastItem","toast","title","handleDismiss","useCallback","coreToast","React","role","onClick","e","stopPropagation","newestOnTop","toasts","setToasts","useState","useEffect","createUnsubscribe","prev","newToasts","reverse","dismissUnsubscribe","filter","t","map","key","constructor","window","dismiss","this","ngOnInit","ngOnDestroy","writable","update","store","newStore","Object","assign","Error","getContainer","broToastifyElement","broToastifyTitleElement","broToastifyMessageElement","closeButton","innerHTML","onclick","CustomEvent","detail","dispatchEvent","addEventListener","target","closest","cursor","createBroToastifyElement","prepend","ReactAdapter","Angular","AngularAdapter","Svelte","SvelteAdapter","Vanilla","VanillaAdapter"],"mappings":"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"}