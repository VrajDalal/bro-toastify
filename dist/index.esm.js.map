{"version":3,"file":"index.esm.js","sources":["../src/core/container.ts","../src/core/animation.ts","../src/dom/style.ts","../src/core/bro-toastify.tsx","../src/adapters/react/Toaster.tsx","../src/adapters/react/index.tsx","../src/adapters/angular/index.ts","../src/adapters/vanilla/index.ts","../src/dom/renderer.ts","../src/index.ts"],"sourcesContent":["import { BroToastifyToastifyOptions } from \"./types\";\r\n\r\nconst containers: Map<string, HTMLElement> = new Map()\r\n\r\nexport function createContainer(position: BroToastifyToastifyOptions['position']): HTMLElement | null {\r\n    if (typeof window === 'undefined') {\r\n        return null; // Return null during SSR\r\n    }\r\n\r\n    if (containers.has(position!)) {\r\n        const existingContainer = containers.get(position!)!;\r\n        if (document.body.contains(existingContainer)) {\r\n            return existingContainer;\r\n        } else {\r\n            // Container exists in our map but not in DOM, re-append it\r\n            document.body.appendChild(existingContainer);\r\n            return existingContainer;\r\n        }\r\n    }\r\n    console.debug('Creating container for position:', position);\r\n\r\n\r\n    const container = document.createElement('div')\r\n    container.className = `broToastify-container broToastify-${position}`\r\n    container.setAttribute('role', 'region')\r\n    container.setAttribute('aria-live', 'polite')\r\n    container.setAttribute('aria-atomic', 'true')\r\n\r\n    switch (position) {\r\n        case 'top-right':\r\n            container.style.top = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'top-left':\r\n            container.style.top = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'top-center':\r\n            container.style.top = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        case 'bottom-right':\r\n            container.style.bottom = '1rem'\r\n            container.style.right = '1rem'\r\n            break\r\n        case 'bottom-left':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '1rem'\r\n            break\r\n        case 'bottom-center':\r\n            container.style.bottom = '1rem'\r\n            container.style.left = '50%'\r\n            container.style.transform = 'translateX(-50%)'\r\n            break\r\n        default:\r\n            console.error(`Invalid position: ${position}`);\r\n            break;\r\n    }\r\n\r\n    document.body.appendChild(container)\r\n\r\n    containers.set(position!, container)\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport function getContainer(position: BroToastifyToastifyOptions[\"position\"]): HTMLElement | null {\r\n    if (typeof window === \"undefined\") {\r\n        return null // Return null during SSR\r\n    }\r\n\r\n    // If container exists, return it\r\n    if (containers.has(position!)) {\r\n        const container = containers.get(position!)!\r\n\r\n        // Make sure it's still in the DOM\r\n        if (!document.body.contains(container)) {\r\n            document.body.appendChild(container)\r\n        }\r\n\r\n        return container\r\n    }\r\n\r\n    // Otherwise create a new one\r\n    return createContainer(position)\r\n}\r\n\r\n\r\nexport function removeAllContainers(): void {\r\n    if (typeof window === \"undefined\") {\r\n      return // Skip during SSR\r\n    }\r\n  \r\n    console.debug(\"Removing all containers\")\r\n    containers.forEach((container) => {\r\n      if (document.body.contains(container)) {\r\n        container.remove()\r\n      }\r\n    })\r\n    containers.clear()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport type AnimationType = 'fade' | 'slide' | 'zoom' | 'flip' | 'bounce' | 'none';\r\n\r\nexport type AnimationDirection = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport interface AnimationOptions {\r\n  type: AnimationType;\r\n  duration: number;\r\n  direction?: AnimationDirection;\r\n  easing?: string;\r\n}\r\n\r\nexport const defaultAnimationOptions: AnimationOptions = {\r\n  type: 'fade',\r\n  duration: 300,\r\n  easing: 'ease'\r\n};\r\n\r\nexport function getAnimationKeyframes(type: AnimationType, direction?: AnimationDirection): string {\r\n  switch (type) {\r\n    case 'fade':\r\n      return `\r\n        @keyframes broToastify-fade-in {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        @keyframes broToastify-fade-out {\r\n          from { opacity: 1; }\r\n          to { opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'slide':\r\n      let translateFrom = 'translateY(-100%)';\r\n      let translateTo = 'translateY(0)';\r\n      \r\n      if (direction === 'right') {\r\n        translateFrom = 'translateX(100%)';\r\n        translateTo = 'translateX(0)';\r\n      } else if (direction === 'bottom') {\r\n        translateFrom = 'translateY(100%)';\r\n        translateTo = 'translateY(0)';\r\n      } else if (direction === 'left') {\r\n        translateFrom = 'translateX(-100%)';\r\n        translateTo = 'translateX(0)';\r\n      }\r\n      \r\n      return `\r\n        @keyframes broToastify-slide-in {\r\n          from { transform: ${translateFrom}; opacity: 0; }\r\n          to { transform: ${translateTo}; opacity: 1; }\r\n        }\r\n        @keyframes broToastify-slide-out {\r\n          from { transform: ${translateTo}; opacity: 1; }\r\n          to { transform: ${translateFrom}; opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'zoom':\r\n      return `\r\n        @keyframes broToastify-zoom-in {\r\n          from { transform: scale(0.5); opacity: 0; }\r\n          to { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-zoom-out {\r\n          from { transform: scale(1); opacity: 1; }\r\n          to { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'flip':\r\n      return `\r\n        @keyframes broToastify-flip-in {\r\n          from { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n          to { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-flip-out {\r\n          from { transform: perspective(400px) rotateX(0deg); opacity: 1; }\r\n          to { transform: perspective(400px) rotateX(90deg); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'bounce':\r\n      return `\r\n        @keyframes broToastify-bounce-in {\r\n          0% { transform: scale(0.5); opacity: 0; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(1); opacity: 1; }\r\n        }\r\n        @keyframes broToastify-bounce-out {\r\n          0% { transform: scale(1); opacity: 1; }\r\n          50% { transform: scale(1.05); opacity: 0.8; }\r\n          100% { transform: scale(0.5); opacity: 0; }\r\n        }\r\n      `;\r\n    \r\n    case 'none':\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  options: AnimationOptions = defaultAnimationOptions,\r\n  isEnter: boolean = true\r\n): void {\r\n  const { type, duration, easing } = options;\r\n  \r\n  if (type === 'none') return;\r\n  \r\n  const animationName = `broToastify-${type}-${isEnter ? 'in' : 'out'}`;\r\n  \r\n  element.style.animation = `${animationName} ${duration}ms ${easing} forwards`;\r\n  \r\n  // Clean up after animation completes\r\n  element.addEventListener('animationend', () => {\r\n    element.style.animation = '';\r\n  }, { once: true });\r\n}\r\n","import { getAnimationKeyframes } from \"../core/animation\"\r\n\r\n// Flag to track if styles have been injected\r\nlet stylesInjected = false\r\n\r\nexport function getBroToastifyStyles(): string {\r\n  return `\r\n    .broToastify-container {\r\n      position: fixed;\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      max-width: 100%;\r\n      max-height: 100vh;\r\n      overflow-y: auto;\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .broToastify-notification {\r\n      position: relative;\r\n      min-width: 300px;\r\n      max-width: 500px;\r\n      padding: 1rem;\r\n      border-radius: 0.375rem;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      overflow: hidden;\r\n      display: flex;\r\n      flex-direction: column;\r\n      opacity: 1 !important;\r\n      visibility: visible !important;\r\n    }\r\n\r\n    .broToastify-default {\r\n      background-color: rgb(240, 241, 240);\r\n      color: #333;\r\n    }\r\n    \r\n    .broToastify-success {\r\n      background-color: #10B981;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-error {\r\n      background-color: #EF4444;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-info {\r\n      background-color: #3B82F6;\r\n      color: white;\r\n    }\r\n    \r\n    .broToastify-warning {\r\n      background-color: #F59E0B;\r\n      color: white;\r\n    }\r\n\r\n    .broToastify-loader-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }   \r\n\r\n    .broToastify-loader {\r\n      border: 4px solid #f3f3f3;\r\n      border-top: 4px solid #3498db;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 20px;\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    .broToastify-loader-message {\r\n      font-size: 0.875rem;\r\n      color: #333;\r\n      animation: fadeIn 0.3s ease-in-out;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    @keyframes fadeIn {\r\n      0% { opacity: 0; transform: translateY(-10px); }\r\n      100% { opacity: 1; transform: translateY(0); }\r\n    }\r\n    \r\n    .broToastify-title {\r\n      font-weight: bold;\r\n      margin-bottom: 0.25rem;\r\n      font-size: 1rem;\r\n    }\r\n    \r\n    .broToastify-message {\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .broToastify-close {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      background: transparent;\r\n      border: none;\r\n      color: currentColor;\r\n      font-size: 1.25rem;\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transition: opacity 0.2s;\r\n    }\r\n    \r\n    .broToastify-close:hover {\r\n      opacity: 1;\r\n    }\r\n    \r\n    .broToastify-top-right {\r\n      top: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-top-left {\r\n      top: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-bottom-right {\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      align-items: flex-end;\r\n    }\r\n    \r\n    .broToastify-bottom-left {\r\n      bottom: 1rem;\r\n      left: 1rem;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .broToastify-top-center {\r\n      top: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    .broToastify-bottom-center {\r\n      bottom: 1rem;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      align-items: center;\r\n    }\r\n    \r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"fade\") : \"\"}\r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"slide\", \"top\") : \"\"}\r\n    ${getAnimationKeyframes ? getAnimationKeyframes(\"zoom\") : \"\"}\r\n    \r\n    @media (max-width: 576px) {\r\n      .broToastify-container {\r\n        width: 100%;\r\n        padding: 0 1rem;\r\n      }\r\n      \r\n      .broToastify-notification {\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .broToastify-top-center,\r\n      .broToastify-top-right,\r\n      .broToastify-top-left {\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n      \r\n      .broToastify-bottom-center,\r\n      .broToastify-bottom-right,\r\n      .broToastify-bottom-left {\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        transform: none;\r\n      }\r\n    }\r\n  `\r\n}\r\n\r\nexport function injectStyles() {\r\n  if (typeof window === \"undefined\" || stylesInjected) return\r\n\r\n  const styleId = \"bro-toastify-styles\"\r\n  if (document.getElementById(styleId)) {\r\n    stylesInjected = true\r\n    return\r\n  }\r\n\r\n  try {\r\n    const style = document.createElement(\"style\")\r\n    style.id = styleId\r\n    style.innerHTML = getBroToastifyStyles()\r\n    document.head.appendChild(style)\r\n    stylesInjected = true\r\n    console.log(\"Bro-toastify styles injected\")\r\n  } catch (error) {\r\n    console.error(\"Failed to inject bro-toastify styles:\", error)\r\n  }\r\n}\r\n","import { BroToastify, BroToastifyToastifyOptions } from \"./types\";\r\nimport { createContainer } from './container';\r\nimport { injectStyles } from \"../dom/style\";\r\n\r\nif (typeof window !== 'undefined') {\r\n    injectStyles();\r\n}\r\n\r\n//Default\r\nconst defaultOptions: Partial<BroToastifyToastifyOptions> = {\r\n    type: \"default\",\r\n    duration: 3000,\r\n    position: \"top-right\",\r\n    dismissible: true,\r\n    pauseOnHover: true,\r\n    customIcon: undefined,\r\n    customClass: undefined,\r\n}\r\n\r\n// Store for active toasts\r\nconst broToastifys: Map<string, BroToastify> = new Map();\r\n\r\n//Event emitter for toast events\r\nconst listeners: Map<string, Function[]> = new Map();\r\n\r\n//Generate Unique Id\r\nconst generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n}\r\n\r\n//Create toast function\r\nexport function createBroToastify(options: BroToastifyToastifyOptions): BroToastify | undefined {\r\n    if (typeof window === 'undefined') {\r\n        return undefined; // Prevent toast creation during SSR\r\n    }\r\n\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    const id = generateId();\r\n\r\n    const BroToastify: BroToastify = {\r\n        ...mergedOptions,\r\n        id,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    broToastifys.set(id, BroToastify);\r\n\r\n    //container exits\r\n    createContainer(mergedOptions.position!);\r\n\r\n    //Emit event\r\n    emit('create', BroToastify);\r\n\r\n    //Auto dismiss\r\n    if (mergedOptions.duration && mergedOptions.duration > 0) {\r\n        setTimeout(() => {\r\n            dismissBroToastify(id);\r\n        }, mergedOptions.duration);\r\n    }\r\n\r\n    return BroToastify\r\n}\r\n\r\n//dismiss broToastify\r\nexport function dismissBroToastify(id: string): void {\r\n    if (typeof window === \"undefined\") {\r\n      return // Skip during SSR\r\n    }\r\n  \r\n    const BroToastify = Array.from(broToastifys.values()).find((t) => t.id === id)\r\n  \r\n    if (BroToastify) {\r\n      broToastifys.delete(id) // Remove the toast from the Map\r\n      emit(\"dismiss\", BroToastify)\r\n  \r\n      if (BroToastify.onClose) {\r\n        BroToastify.onClose()\r\n      }\r\n    }\r\n  }\r\n\r\n//clear all broToastify\r\nexport function clearBroToastify(): void {\r\n    if (typeof window === 'undefined') {\r\n        return; // Prevent execution during SSR\r\n    }\r\n\r\n    const allBroToastifys = Array.from(broToastifys.values());\r\n    allBroToastifys.forEach((broToastify) => {\r\n        dismissBroToastify(broToastify.id);\r\n    })\r\n}\r\n\r\n\r\n//subscribe to event\r\nexport function on(event: string, callback: Function): { off: () => void } {\r\n    if (!listeners.has(event)) {\r\n        listeners.set(event, []);\r\n    }\r\n\r\n    listeners.get(event)!.push(callback);\r\n\r\n    //return unsubscribe function\r\n    return {\r\n        off: () => {\r\n            const callbacks = listeners.get(event);\r\n            if (callbacks) {\r\n                const index = callbacks.indexOf(callback);\r\n                if (index !== -1) {\r\n                    callbacks.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n//emit event\r\nfunction emit(event: string, data: any): void {\r\n    const callbacks = listeners.get(event);\r\n    if (callbacks) {\r\n        callbacks.forEach((callback) => callback(data));\r\n    }\r\n}\r\n\r\n//convenience methods\r\nconst toast = {\r\n    show: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'show', ...options }),\r\n    success: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'success', ...options }),\r\n    error: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'error', ...options }),\r\n    info: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'info', ...options }),\r\n    warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'warning', ...options }),\r\n    loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) =>\r\n        createBroToastify({ message, type: 'loading', ...options }),\r\n    promises: (\r\n        promise: Promise<any>,\r\n        message: { loading: string, success: string, error: string },\r\n        options?: Partial<BroToastifyToastifyOptions>\r\n    ) => {\r\n        if (typeof window === 'undefined') {\r\n            return undefined; // Prevent execution during SSR\r\n        }\r\n\r\n        const id = generateId();\r\n\r\n        createBroToastify({ id, message: message.loading, type: 'loading', ...options });\r\n\r\n        promise\r\n            .then((result) => {\r\n                dismissBroToastify(id)\r\n                createBroToastify({ message: message.success, type: 'success', ...options });\r\n                return result\r\n            })\r\n            .catch((error) => {\r\n                dismissBroToastify(id)\r\n                createBroToastify({ message: message.error, type: 'error', ...options });\r\n                throw error\r\n            });\r\n        return { id };\r\n    },\r\n    isToastActive: (id: string): boolean => {\r\n        return !!Array.from(broToastifys.values()).find((toast) => toast.id === id);\r\n    },\r\n    dismiss: (id: string) => dismissBroToastify(id),\r\n    dismissible: (id: string) => dismissBroToastify(id),\r\n    clearAll: clearBroToastify,\r\n}\r\n\r\nexport default toast;\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { createPortal } from \"react-dom\"\r\nimport { on, dismissBroToastify } from \"../../core/bro-toastify\"\r\nimport type { BroToastify, BroToastifyToastifyOptions } from \"../../core/types\"\r\nimport { injectStyles } from \"../../dom/style\"\r\n\r\n// This is the client-side Toaster component\r\nexport const Toaster = ({\r\n  position = \"top-right\",\r\n  newestOnTop = false,\r\n  dismissible = true,\r\n}: {\r\n  position?: BroToastifyToastifyOptions[\"position\"]\r\n  newestOnTop?: boolean\r\n  dismissible?: boolean\r\n}) => {\r\n  const [toasts, setToasts] = useState<BroToastify[]>([])\r\n  const [mounted, setMounted] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    injectStyles()\r\n\r\n    const createHandler = (toast: BroToastify) => {\r\n      setToasts((prev) => (newestOnTop ? [toast, ...prev] : [...prev, toast]))\r\n    }\r\n\r\n    const dismissHandler = (toast: BroToastify) => {\r\n      setToasts((prev) => prev.filter((t) => t.id !== toast.id))\r\n    }\r\n\r\n    const createListener = on(\"create\", createHandler)\r\n    const dismissListener = on(\"dismiss\", dismissHandler)\r\n\r\n    return () => {\r\n      createListener.off()\r\n      dismissListener.off()\r\n    }\r\n  }, [newestOnTop])\r\n\r\n  useEffect(() => {\r\n    const timers = toasts.map((toast) => {\r\n      if (toast.duration && toast.duration > 0) {\r\n        return setTimeout(() => {\r\n          dismissBroToastify(toast.id)\r\n        }, toast.duration)\r\n      }\r\n      return null\r\n    })\r\n\r\n    return () => {\r\n      timers.forEach((timer) => timer && clearTimeout(timer))\r\n    }\r\n  }, [toasts])\r\n\r\n  if (!mounted) return null\r\n\r\n  return createPortal(\r\n    <div className={`broToastify-container broToastify-${position}`}>\r\n      {toasts.map((toast) => (\r\n        <div\r\n          key={toast.id}\r\n          id={`broToastify-${toast.id}`}\r\n          className={`broToastify-notification broToastify-${toast.type}`}\r\n        >\r\n          {toast.title && <div className=\"broToastify-title\">{toast.title}</div>}\r\n          <div className=\"broToastify-message\">{toast.message}</div>\r\n          {dismissible && (\r\n            <button className=\"broToastify-close\" aria-label=\"Close\" onClick={() => dismissBroToastify(toast.id)}>\r\n              ×\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>,\r\n    document.body,\r\n  )\r\n}\r\n\r\n// Create a special export for Next.js App Router\r\n// This is a trick to make the component work in Server Components\r\nToaster.displayName = \"Toaster\"\r\n","// // react/index.tsx\r\nimport coreToast from \"../../core/bro-toastify\"\r\nimport type { BroToastifyToastifyOptions } from \"../../core/types\"\r\nimport { injectStyles } from \"../../dom/style\"\r\nimport { on } from \"../../core/bro-toastify\"\r\nimport type { BroToastify } from \"../../core/types\"\r\n\r\n// Client-side initialization script that runs when this module is imported on the client\r\nif (typeof window !== \"undefined\") {\r\n    // Inject styles immediately\r\n    injectStyles()\r\n\r\n    // Set up a MutationObserver to detect when Toaster placeholders are added to the DOM\r\n    const observer = new MutationObserver((mutations) => {\r\n        mutations.forEach((mutation) => {\r\n            if (mutation.type === \"childList\") {\r\n                mutation.addedNodes.forEach((node) => {\r\n                    if (node instanceof HTMLElement && node.hasAttribute(\"data-bro-toastify\")) {\r\n                        const position = node.getAttribute(\"data-position\") || \"top-right\"\r\n                        const newestOnTop = node.getAttribute(\"data-newest-on-top\") !== \"false\"\r\n                        const dismissible = node.getAttribute(\"data-dismissible\") !== \"false\"\r\n\r\n                        // Initialize the toast container\r\n                        initToastContainer(position, newestOnTop, dismissible)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    })\r\n\r\n    // Start observing the document body for Toaster placeholders\r\n    observer.observe(document.body, { childList: true, subtree: true })\r\n}\r\n\r\n// Global state for toast management\r\nconst toastState = {\r\n    containers: new Map<string, HTMLElement>(),\r\n    activeToasts: new Map<string, HTMLElement>(),\r\n    listeners: {\r\n        create: null as { off: () => void } | null,\r\n        dismiss: null as { off: () => void } | null,\r\n    },\r\n    initialized: new Set<string>(),\r\n}\r\n\r\n// Initialize toast container\r\nfunction initToastContainer(position: string, newestOnTop: boolean, dismissible: boolean) {\r\n    if (typeof window === \"undefined\") return\r\n\r\n    // Create a unique key for this configuration\r\n    const configKey = `${position}-${newestOnTop}-${dismissible}`\r\n\r\n    // Skip if already initialized with this config\r\n    if (toastState.initialized.has(configKey)) return\r\n\r\n    console.log(\"Initializing toast container:\", { position, newestOnTop, dismissible })\r\n    toastState.initialized.add(configKey)\r\n\r\n    // Create or update container\r\n    let container = document.querySelector(`.broToastify-container.broToastify-${position}`) as HTMLDivElement\r\n    if (!container) {\r\n        container = document.createElement(\"div\")\r\n        container.className = `broToastify-container broToastify-${position}`\r\n        container.style.display = \"flex\"\r\n        document.body.appendChild(container)\r\n        console.log(\"Created container:\", container)\r\n    } else {\r\n        container.style.display = \"flex\"\r\n        console.log(\"Found existing container:\", container)\r\n    }\r\n\r\n    // Store the container\r\n    toastState.containers.set(position, container)\r\n\r\n    // Clean up old listeners\r\n    if (toastState.listeners.create) toastState.listeners.create.off()\r\n    if (toastState.listeners.dismiss) toastState.listeners.dismiss.off()\r\n\r\n    // Set up create handler\r\n    toastState.listeners.create = on(\"create\", (toast: BroToastify) => {\r\n        if (!container || !toast) {\r\n            console.error(\"Cannot create toast: missing container or toast\", { container, toast })\r\n            return\r\n        }\r\n\r\n        console.log(\"Received create event for toast:\", toast)\r\n\r\n        let toastElement = toastState.activeToasts.get(toast.id)\r\n\r\n        if (!toastElement) {\r\n            toastElement = document.createElement(\"div\")\r\n            toastElement.id = `broToastify-${toast.id}`\r\n            toastElement.className = `broToastify-notification broToastify-${toast.type}`\r\n            toastElement.setAttribute(\"data-id\", toast.id)\r\n\r\n            try {\r\n                if (newestOnTop) {\r\n                    container.prepend(toastElement)\r\n                } else {\r\n                    container.appendChild(toastElement)\r\n                }\r\n                console.log(\"Created and appended toast element:\", toastElement)\r\n            } catch (error) {\r\n                console.error(\"Failed to append toast element:\", error)\r\n                return\r\n            }\r\n\r\n            toastState.activeToasts.set(toast.id, toastElement)\r\n        }\r\n\r\n        try {\r\n            toastElement.innerHTML = `\r\n        <div class=\"broToastify-title\">${toast.title || \"\"}</div>\r\n        <div class=\"broToastify-message\">${toast.message}</div>\r\n        ${dismissible ? `<button class=\"broToastify-close\" aria-label=\"Close\">×</button>` : \"\"}\r\n      `\r\n            console.log(\"Updated toast element HTML:\", toastElement)\r\n        } catch (error) {\r\n            console.error(\"Failed to update toast HTML:\", error)\r\n        }\r\n\r\n        if (dismissible) {\r\n            const closeButton = toastElement.querySelector(\".broToastify-close\")\r\n            if (closeButton) {\r\n                closeButton.addEventListener(\"click\", () => {\r\n                    if (container && toastElement) {\r\n                        container.removeChild(toastElement)\r\n                        toastState.activeToasts.delete(toast.id)\r\n                        coreToast.dismiss(toast.id)\r\n                        console.log(\"Dismissed toast:\", toast.id)\r\n                    }\r\n                })\r\n                console.log(\"Added close button listener for toast:\", toast.id)\r\n            }\r\n        }\r\n\r\n        // Auto-dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                if (container && toastElement && container.contains(toastElement)) {\r\n                    container.removeChild(toastElement)\r\n                    toastState.activeToasts.delete(toast.id)\r\n                    console.log(\"Auto-dismissed toast:\", toast.id)\r\n                }\r\n            }, toast.duration)\r\n        }\r\n    })\r\n\r\n    // Set up dismiss handler\r\n    toastState.listeners.dismiss = on(\"dismiss\", (toast: BroToastify) => {\r\n        const id = toast.id\r\n        const toastElement = toastState.activeToasts.get(id)\r\n        if (toastElement && container && container.contains(toastElement)) {\r\n            container.removeChild(toastElement)\r\n            toastState.activeToasts.delete(id)\r\n            console.log(\"Handled dismiss event for toast:\", id)\r\n        }\r\n    })\r\n}\r\n\r\n// Export the Toaster component\r\nexport { Toaster } from \"./Toaster\"\r\n\r\n// Export the toast functions\r\nexport { default as toast } from \"../../core/bro-toastify\"\r\n\r\n// Re-export the core toast for direct usage\r\nexport default coreToast\r\n\r\n// Hook for using toast (for client components)\r\nexport const broToastify = () => {\r\n    return {\r\n        show: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.show(message, options),\r\n        success: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.success(message, options),\r\n        error: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.error(message, options),\r\n        info: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.info(message, options),\r\n        warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.warning(message, options),\r\n        loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.loading(message, options),\r\n        promises: (\r\n            promise: Promise<any>,\r\n            messages: { loading: string; success: string; error: string },\r\n            options?: Partial<BroToastifyToastifyOptions>,\r\n        ) => coreToast.promises(promise, messages, options),\r\n        isToastActive: (id: string) => coreToast.isToastActive(id),\r\n        dismiss: (id: string) => coreToast.dismiss(id),\r\n        dismissible: (id: string) => coreToast.dismiss(id),\r\n        clearAll: () => coreToast.clearAll(),\r\n    }\r\n}\r\n\r\n// import coreToast, { on } from \"../../core/bro-toastify\"\r\n// import type { BroToastify, BroToastifyToastifyOptions } from \"../../core/types\"\r\n// import { injectStyles } from \"../../dom/style\"\r\n// import { Toaster } from \"./Toaster\" // Import the Toaster component\r\n\r\n// // Inject styles and set up MutationObserver on the client\r\n// if (typeof window !== \"undefined\") {\r\n//   injectStyles()\r\n\r\n//   const observer = new MutationObserver((mutations) => {\r\n//     mutations.forEach((mutation) => {\r\n//       if (mutation.type === \"childList\") {\r\n//         mutation.addedNodes.forEach((node) => {\r\n//           if (node instanceof HTMLElement && node.hasAttribute(\"data-bro-toastify\")) {\r\n//             const position = node.getAttribute(\"data-position\") || \"top-right\"\r\n//             const newestOnTop = node.getAttribute(\"data-newest-on-top\") !== \"false\"\r\n//             const dismissible = node.getAttribute(\"data-dismissible\") !== \"false\"\r\n\r\n//             initToastContainer(position, newestOnTop, dismissible)\r\n//           }\r\n//         })\r\n//       }\r\n//     })\r\n//   })\r\n\r\n//   observer.observe(document.body, { childList: true, subtree: true })\r\n// }\r\n\r\n// // Global state for toast management\r\n// const toastState = {\r\n//   containers: new Map<string, HTMLElement>(),\r\n//   activeToasts: new Map<string, HTMLElement>(),\r\n//   listeners: {\r\n//     create: null as { off: () => void } | null,\r\n//     dismiss: null as { off: () => void } | null,\r\n//   },\r\n//   initialized: new Set<string>(),\r\n// }\r\n\r\n// // Initialize toast container\r\n// function initToastContainer(position: string, newestOnTop: boolean, dismissible: boolean) {\r\n//   if (typeof window === \"undefined\") return\r\n\r\n//   const configKey = `${position}-${newestOnTop}-${dismissible}`\r\n//   if (toastState.initialized.has(configKey)) return\r\n\r\n//   console.log(\"Initializing toast container:\", { position, newestOnTop, dismissible })\r\n//   toastState.initialized.add(configKey)\r\n\r\n//   let container = document.querySelector(`.broToastify-container.broToastify-${position}`) as HTMLDivElement\r\n//   if (!container) {\r\n//     container = document.createElement(\"div\")\r\n//     container.className = `broToastify-container broToastify-${position}`\r\n//     container.style.display = \"flex\"\r\n//     document.body.appendChild(container)\r\n//   }\r\n\r\n//   toastState.containers.set(position, container)\r\n\r\n//   if (toastState.listeners.create) toastState.listeners.create.off()\r\n//   if (toastState.listeners.dismiss) toastState.listeners.dismiss.off()\r\n\r\n//   toastState.listeners.create = on(\"create\", (toast: BroToastify) => {\r\n//     if (!container || !toast) return\r\n\r\n//     let toastElement = toastState.activeToasts.get(toast.id)\r\n//     if (!toastElement) {\r\n//       toastElement = document.createElement(\"div\")\r\n//       toastElement.id = `broToastify-${toast.id}`\r\n//       toastElement.className = `broToastify-notification broToastify-${toast.type}`\r\n//       toastElement.setAttribute(\"data-id\", toast.id)\r\n\r\n//       if (newestOnTop) {\r\n//         container.prepend(toastElement)\r\n//       } else {\r\n//         container.appendChild(toastElement)\r\n//       }\r\n\r\n//       toastState.activeToasts.set(toast.id, toastElement)\r\n//     }\r\n\r\n//     toastElement.innerHTML = `\r\n//       <div class=\"broToastify-title\">${toast.title || \"\"}</div>\r\n//       <div class=\"broToastify-message\">${toast.message}</div>\r\n//       ${dismissible ? `<button class=\"broToastify-close\" aria-label=\"Close\">×</button>` : \"\"}\r\n//     `\r\n\r\n//     if (dismissible) {\r\n//       const closeButton = toastElement.querySelector(\".broToastify-close\")\r\n//       if (closeButton) {\r\n//         closeButton.addEventListener(\"click\", () => {\r\n//           if (container && toastElement) {\r\n//             container.removeChild(toastElement)\r\n//             toastState.activeToasts.delete(toast.id)\r\n//             coreToast.dismiss(toast.id)\r\n//           }\r\n//         })\r\n//       }\r\n//     }\r\n\r\n//     if (toast.duration && toast.duration > 0) {\r\n//       setTimeout(() => {\r\n//         if (container && toastElement && container.contains(toastElement)) {\r\n//           container.removeChild(toastElement)\r\n//           toastState.activeToasts.delete(toast.id)\r\n//         }\r\n//       }, toast.duration)\r\n//     }\r\n//   })\r\n\r\n//   toastState.listeners.dismiss = on(\"dismiss\", (toast: BroToastify) => {\r\n//     const id = toast.id\r\n//     const toastElement = toastState.activeToasts.get(id)\r\n//     if (toastElement && container && container.contains(toastElement)) {\r\n//       container.removeChild(toastElement)\r\n//       toastState.activeToasts.delete(id)\r\n//     }\r\n//   })\r\n// }\r\n\r\n// // Export the core toast for direct usage\r\n// export const toast = coreToast\r\n\r\n// // Hook for using toast (for client components)\r\n// export const broToastify = () => {\r\n//   return {\r\n//     show: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.show(message, options),\r\n//     success: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.success(message, options),\r\n//     error: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.error(message, options),\r\n//     info: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.info(message, options),\r\n//     warning: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.warning(message, options),\r\n//     loading: (message: string, options?: Partial<BroToastifyToastifyOptions>) => coreToast.loading(message, options),\r\n//     promises: (\r\n//       promise: Promise<any>,\r\n//       messages: { loading: string; success: string; error: string },\r\n//       options?: Partial<BroToastifyToastifyOptions>,\r\n//     ) => coreToast.promises(promise, messages, options),\r\n//     isToastActive: (id: string) => coreToast.isToastActive(id),\r\n//     dismiss: (id: string) => coreToast.dismiss(id),\r\n//     clearAll: () => coreToast.clearAll(),\r\n//   }\r\n// }\r\n\r\n// // Export the Toaster component\r\n// export { Toaster }\r\n\r\n// export default toast","\r\nimport toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\n\r\n// Toast service for Angular\r\nexport class ToastService {\r\n  constructor() {\r\n    // Inject styles when service is instantiated\r\n    if (typeof window !== 'undefined') {\r\n      injectStyles();\r\n    }\r\n  }\r\n\r\n  show(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.show(message, options);\r\n  }\r\n\r\n  success(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.success(message, options);\r\n  }\r\n\r\n  error(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.error(message, options);\r\n  }\r\n\r\n  info(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.info(message, options);\r\n  }\r\n\r\n  warning(message: string, options?: Partial<BroToastifyToastifyOptions>) {\r\n    return toast.warning(message, options);\r\n  }\r\n\r\n  dismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n\r\n  clearAll() {\r\n    toast.clearAll();\r\n  }\r\n}\r\n\r\n// Component class for ToastContainer\r\nexport class ToastContainerComponent {\r\n  position: BroToastifyToastifyOptions['position'] = 'top-right';\r\n  newestOnTop: boolean = true;\r\n  toasts: BroToastify[] = [];\r\n\r\n  private createUnsubscribe: (() => void) | null = null;\r\n  private dismissUnsubscribe: (() => void) | null = null;\r\n\r\n  ngOnInit() {\r\n    // Subscribe to toast events\r\n    const createSubscription = on('create', (toast: BroToastify) => {\r\n      if (toast.position === this.position) {\r\n        if (this.newestOnTop) {\r\n          this.toasts = [toast, ...this.toasts];\r\n        } else {\r\n          this.toasts = [...this.toasts, toast];\r\n        }\r\n      }\r\n    });\r\n    this.createUnsubscribe = createSubscription.off;\r\n\r\n    const dismissSubscription = on('dismiss', (toast: BroToastify) => {\r\n      this.toasts = this.toasts.filter(t => t.id !== toast.id);\r\n    });\r\n    this.dismissUnsubscribe = dismissSubscription.off;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup\r\n    if (this.createUnsubscribe) {\r\n      this.createUnsubscribe();\r\n    }\r\n\r\n    if (this.dismissUnsubscribe) {\r\n      this.dismissUnsubscribe();\r\n    }\r\n  }\r\n\r\n  handleDismiss(id: string) {\r\n    toast.dismissible(id);\r\n  }\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const angularToast = toast;\r\n","import toast, { on } from '../../core/bro-toastify';\r\nimport { BroToastify, BroToastifyToastifyOptions, BroToastifyContainerOptions } from '../../core/types';\r\nimport { injectStyles } from '../../dom/style';\r\nimport { createBroToastifyElement } from '../../dom/renderer';\r\nimport { getContainer } from '../../core/container';\r\n\r\n/**\r\n * Initialize the vanilla JS adapter\r\n * @param options Default options for all toasts\r\n */\r\n\r\nexport { injectStyles }\r\n\r\nexport function init(options?: Partial<BroToastifyContainerOptions>): () => void {\r\n    // Inject styles\r\n    if (typeof window !== 'undefined') {\r\n        injectStyles();\r\n    }\r\n\r\n    // Set default options if provided\r\n    if (options) {\r\n        Object.assign(toast, { defaultOptions: options });\r\n    }\r\n\r\n    // Subscribe to toast events\r\n    const createListener = on('create', (toast: BroToastify) => {\r\n        const container = getContainer(toast.position);\r\n        const toastElement = createBroToastifyElement(toast);\r\n\r\n        // Add to container\r\n        if (options?.newestOnTop) {\r\n            container?.prepend(toastElement);\r\n        } else {\r\n            container?.appendChild(toastElement);\r\n        }\r\n\r\n        // Set up dismiss event listener\r\n        const handleDismiss = (e: CustomEvent) => {\r\n            if (e.detail.id === toast.id) {\r\n                toast.dismiss?.(toast.id);\r\n                toastElement.remove();\r\n            }\r\n        };\r\n        document.addEventListener('toast:dismiss', handleDismiss as EventListener);\r\n\r\n        // Auto dismiss\r\n        if (toast.duration && toast.duration > 0) {\r\n            setTimeout(() => {\r\n                toast.dismiss?.(toast.id); // Use dismiss method\r\n                toastElement.remove();\r\n            }, toast.duration);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            document.removeEventListener('toast:dismiss', handleDismiss as EventListener);\r\n        };\r\n        toastElement.addEventListener('remove', cleanup, { once: true });\r\n    });\r\n\r\n    // Cleanup on module unload (optional, if needed)\r\n    return () => {\r\n        createListener.off();\r\n    };\r\n}\r\n\r\n// Export the core toast for direct usage\r\nexport const vanilla = toast;","import { BroToastify, BroToastifyToastifyOptions } from \"../core/types\";\r\nimport { injectStyles, getBroToastifyStyles } from \"./style\";\r\n\r\nexport function createBroToastifyElement(broToastify: BroToastify): HTMLElement {\r\n    const { id, type, message, title, dismissible, customClass } = broToastify;\r\n\r\n    const broToastifyElement = document.createElement(\"div\");\r\n    broToastifyElement.id = `broToastify-${id}`;\r\n    broToastifyElement.className = `broToastify-notification broToastify-${type} ${customClass || \"\"}`;\r\n    broToastifyElement.setAttribute(\"role\", \"alert\");\r\n\r\n    //add title\r\n    if (title) {\r\n        const broToastifyTitleElement = document.createElement('div');\r\n        broToastifyTitleElement.className = 'broToastify-title';\r\n        broToastifyTitleElement.textContent = title;\r\n        broToastifyElement.appendChild(broToastifyTitleElement);\r\n    }\r\n\r\n    //add message\r\n    const broToastifyMessageElement = document.createElement('div');\r\n    broToastifyMessageElement.className = 'broToastify-message';\r\n    broToastifyMessageElement.textContent = message;\r\n    broToastifyElement.appendChild(broToastifyMessageElement);\r\n\r\n    // Add close button if dismissible\r\n    if (dismissible) {\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'broToastify-close';\r\n        closeButton.innerHTML = '&times;';\r\n        closeButton.setAttribute('aria-label', 'Close');\r\n        closeButton.onclick = () => {\r\n            // This will be handled by the core\r\n            const event = new CustomEvent('broToastify:dismiss', { detail: { id } });\r\n            document.dispatchEvent(event);\r\n        };\r\n        broToastifyElement.appendChild(closeButton);\r\n    }\r\n\r\n    //handle click event\r\n    if (broToastify.onClick) {\r\n        broToastifyElement.addEventListener('click', (e) => {\r\n            // Don't trigger if clicking the close button\r\n            if (!(e.target as HTMLElement).closest('.broToastify-close')) {\r\n                broToastify.onClick!();\r\n            }\r\n        });\r\n        broToastifyElement.style.cursor = 'pointer';\r\n    }\r\n    return broToastifyElement;\r\n}\r\n\r\n// Ensure styles are injected\r\nexport function initializeRenderer(): void {\r\n    injectStyles();\r\n}","    export * from './core/bro-toastify';\r\n    export * from './core/types';\r\n\r\n    // Export framework adapters\r\n    import * as ReactAdapter from './adapters/react';\r\n    import * as AngularAdapter from './adapters/angular';\r\n    import * as VanillaAdapter from './adapters/vanilla';\r\n    // import * as VueAdapter from './adapters/vue';\r\n    // import * as SvelteAdapter from './adapters/svelte';\r\n\r\n    // Named exports for each framework\r\n    export const React = ReactAdapter;\r\n    export const Angular = AngularAdapter;\r\n    export const Vanilla = VanillaAdapter;\r\n    // export const Vue = VueAdapter;\r\n    // export const Svelte = SvelteAdapter;\r\n\r\n\r\n\r\n    // Also create a default export for convenience\r\n    export { Toaster } from './adapters/react'; // Adjust the path if necessary\r\n    import toast from './core/bro-toastify';\r\n    export default toast;"],"names":["containers","Map","createContainer","position","window","has","existingContainer","get","document","body","contains","appendChild","console","debug","container","createElement","className","concat","setAttribute","style","top","right","left","transform","bottom","error","set","getAnimationKeyframes","type","direction","translateFrom","translateTo","stylesInjected","injectStyles","styleId","getElementById","id","innerHTML","head","log","defaultOptions","duration","dismissible","pauseOnHover","customIcon","undefined","customClass","broToastifys","listeners","generateId","Date","now","toString","Math","random","substring","createBroToastify","options","mergedOptions","__assign","BroToastify","createdAt","emit","setTimeout","dismissBroToastify","Array","from","values","find","t","delete","onClose","clearBroToastify","forEach","broToastify","on","event","callback","push","off","callbacks","index","indexOf","splice","data","toast","show","message","success","info","warning","loading","promises","promise","then","result","catch","isToastActive","dismiss","clearAll","Toaster","_a","_b","_c","newestOnTop","_d","_e","useState","toasts","setToasts","_f","mounted","setMounted","useEffect","createListener","prev","__spreadArray","dismissListener","filter","timers","map","timer","clearTimeout","createPortal","React","key","title","onClick","displayName","MutationObserver","mutations","mutation","addedNodes","node","HTMLElement","hasAttribute","configKey","toastState","initialized","add","querySelector","display","create","toastElement","activeToasts","prepend","closeButton","addEventListener","removeChild","coreToast","initToastContainer","getAttribute","observe","childList","subtree","Set","messages","ToastService","prototype","ToastContainerComponent","this","createUnsubscribe","dismissUnsubscribe","ngOnInit","_this","createSubscription","dismissSubscription","ngOnDestroy","handleDismiss","angularToast","vanilla","Object","assign","getContainer","broToastifyElement","broToastifyTitleElement","textContent","broToastifyMessageElement","onclick","CustomEvent","detail","dispatchEvent","e","target","closest","cursor","createBroToastifyElement","call","remove","removeEventListener","once","ReactAdapter","Angular","AngularAdapter","Vanilla","VanillaAdapter"],"mappings":"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"}